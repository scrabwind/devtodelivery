var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.847,1,2.133]],["body/modules/AppModule.html",[0,1.212,1,4.141,2,1.087,3,1.087,4,1.278,5,1.278,6,1.087,7,1.278,8,1.278,9,2.383,10,2.383,11,3.285,12,0.031,13,3.285,14,3.285,15,3.285,16,3.285,17,3.285,18,1.812,19,1.278,20,1.278,21,0.322,22,0.322,23,0.286,24,2.844,25,4.033,26,0.72,27,2.844,28,2.844,29,4.033,30,2.383,31,4.51,32,4.272,33,4.033,34,2.844,35,4.272,36,2.383,37,4.033,38,2.383,39,1.852,40,0.735,41,2.844,42,5.099,43,2.383,44,2.844,45,1.391,46,4.033,47,4.033,48,4.033,49,4.033,50,2.383,51,2.383,52,2.844,53,2.844,54,2.844,55,2.844,56,2.844,57,2.844,58,2.844,59,2.844,60,4.033,61,2.844,62,2.844,63,2.844,64,0.93,65,2.844,66,2.844,67,2.844,68,1.178,69,2.844,70,2.383,71,1.087,72,2.844,73,2.844,74,2.844,75,2.844,76,2.844,77,2.844,78,1.52,79,2.844,80,2.844,81,2.844,82,2.383,83,4.033,84,2.844,85,2.844,86,2.844,87,2.844,88,2.844,89,1.087,90,2.844,91,2.291,92,0.796,93,1.67,94,1.217,95,1.812,96,2.844,97,2.844,98,1.178,99,2.844,100,0.322,101,0.286,102,0.018,103,0.018]],["title/interfaces/Film.html",[104,0.99,105,1.252]],["body/interfaces/Film.html",[12,0.03,21,0.268,22,0.268,23,0.238,26,0.268,68,0.979,89,0.904,91,2.564,92,1.144,93,2.249,94,1.54,95,1.585,98,1.746,100,0.658,102,0.016,103,0.016,104,1.586,105,1.612,106,1.157,107,0.332,108,0.987,109,2.1,110,1.825,111,2.1,112,1.825,113,1.333,114,2.1,115,1.586,116,2.1,117,2.1,118,1.586,119,1.586,120,2.1,121,1.586,122,2.906,123,0.968,124,1.264,125,1.157,126,1.585,127,1.585,128,1.063,129,1.264,130,1.293,131,1.643,132,1.157,133,1.157,134,1.157,135,1.157,136,1.157,137,1.157,138,1.063,139,1.063,140,1.209,141,1.063,142,0.868,143,1.063,144,1.063,145,1.063,146,1.063,147,1.063,148,1.063,149,1.063,150,1.063,151,1.063,152,1.063,153,1.063,154,1.063,155,1.063,156,1.063,157,0.904,158,1.063,159,1.46,160,1.46,161,1.46,162,1.46,163,1.063,164,1.46,165,1.46,166,1.46,167,1.063,168,1.46,169,1.46,170,1.46,171,1.063,172,1.063,173,1.063]],["title/modules/FilmsModule.html",[0,0.847,11,1.924]],["body/modules/FilmsModule.html",[0,1.491,2,1.65,3,1.65,4,1.94,5,1.94,6,1.65,7,2.591,8,1.94,11,3.785,12,0.03,18,2.39,19,1.94,20,1.94,21,0.489,22,0.489,23,0.434,26,0.682,40,1.116,100,0.489,101,0.434,102,0.024,103,0.024,174,3.617,175,3.617,176,3.365,177,3.079,178,4.318,179,3.617,180,3.465,181,4.318,182,3.617]],["title/classes/FilmsResolver.html",[101,0.329,180,2.133]],["body/classes/FilmsResolver.html",[12,0.031,21,0.336,22,0.336,23,0.299,26,0.543,40,0.768,45,1.453,64,1.973,71,1.59,78,1.588,92,0.815,100,0.336,101,0.299,102,0.019,103,0.019,107,0.417,108,1.164,123,0.742,126,2.336,127,2.156,131,1.572,132,1.453,133,2.542,140,1.076,142,0.891,176,2.779,180,2.709,182,2.49,183,1.588,184,2.49,185,2.347,186,1.837,187,2.542,188,1.36,189,3.485,190,1.588,191,2.972,192,1.789,193,2.972,194,1.451,195,1.451,196,4.16,197,0.971,198,0.899,199,4.16,200,2.972,201,2.972,202,2.819,203,3.42,204,2.972,205,4.021,206,2.223,207,1.451,208,1.746,209,2.972,210,2.972,211,4.356,212,1.746,213,1.746,214,2.972,215,1.588,216,2.972,217,2.057,218,1.696,219,2.972,220,2.972,221,2.972,222,2.676,223,2.49,224,2.972,225,4.16,226,2.972,227,4.16,228,4.16,229,2.972,230,4.799,231,4.16,232,2.223,233,4.16,234,2.972,235,2.972,236,4.799,237,2.972,238,4.799,239,2.972,240,4.16,241,2.972,242,4.16,243,2.972]],["title/injectables/FilmsService.html",[176,1.75,244,0.99]],["body/injectables/FilmsService.html",[12,0.031,21,0.26,22,0.26,23,0.231,26,0.559,40,0.595,64,1.94,71,1.32,92,0.881,94,0.825,100,0.26,101,0.231,102,0.021,103,0.016,105,1.585,107,0.323,108,0.966,109,1.552,110,1.129,111,1.552,112,1.129,113,0.99,114,1.552,115,1.045,116,1.552,117,1.552,118,1.045,119,1.045,120,1.552,121,1.045,123,0.642,130,0.595,131,1.675,140,0.595,142,0.964,176,1.846,177,2.538,179,1.927,185,2.028,186,1.629,187,2.254,188,1.129,190,1.229,192,1.696,194,1.254,195,1.254,197,0.752,198,0.696,207,1.394,215,1.229,217,1.833,218,2.001,222,2.935,223,3.475,244,1.045,245,1.125,246,1.927,247,2.029,248,2.029,249,4.61,250,4.61,251,2.3,252,2.3,253,2.029,254,1.717,255,2.3,256,2.029,257,2.3,258,2.3,259,2.3,260,3.454,261,2.3,262,1.351,263,1.689,264,1.927,265,1.229,266,1.229,267,1.351,268,2.029,269,1.689,270,2.821,271,2.464,272,2.3,273,1.846,274,2.029,275,2.029,276,2.029,277,2.3,278,2.3,279,2.3,280,2.3,281,2.3,282,2.3,283,2.3,284,2.3,285,2.3,286,2.3,287,1.351,288,1.351,289,1.351,290,2.029,291,2.029,292,2.029,293,2.029,294,2.3,295,1.351,296,1.351,297,1.351,298,2.3,299,2.3,300,2.3,301,2.3,302,2.3,303,2.3,304,2.3,305,2.3,306,2.3,307,2.3,308,1.351,309,1.351,310,1.351,311,2.3,312,2.3,313,2.3,314,2.3,315,2.3,316,2.3,317,2.3,318,2.3,319,4.61,320,2.894,321,5.189,322,2.3,323,3.454,324,2.3,325,2.3,326,2.3,327,2.3,328,2.3,329,2.3,330,2.3,331,2.3,332,2.3,333,2.3,334,2.3,335,2.3,336,2.3,337,2.3,338,4.941,339,2.3,340,3.454,341,3.454,342,2.3,343,2.3]],["title/interfaces/IQuery.html",[104,0.99,128,1.471]],["body/interfaces/IQuery.html",[12,0.031,21,0.25,22,0.25,23,0.222,26,0.25,68,0.913,89,0.843,91,2.515,92,1.133,93,1.674,94,1.501,95,1.503,98,2.008,100,0.646,102,0.015,103,0.015,104,1.544,105,1.279,106,1.078,107,0.309,109,0.991,110,1.586,111,0.991,112,1.586,113,1.362,114,0.991,115,1.467,116,0.991,117,0.991,118,1.467,119,1.467,120,0.991,121,1.467,122,2.951,123,0.883,124,1.179,125,1.078,126,1.503,127,1.503,128,1.503,129,1.788,130,1.568,131,1.818,132,1.636,133,2.207,134,1.636,135,1.636,136,1.636,137,1.636,138,0.991,139,0.991,140,1.32,141,0.991,142,1.06,143,0.991,144,0.991,145,0.991,146,0.991,147,0.991,148,0.991,149,0.991,150,0.991,151,0.991,152,0.991,153,0.991,154,0.991,155,0.991,156,0.991,157,0.843,158,0.991,159,1.385,160,1.385,161,1.385,162,1.385,163,0.991,164,1.385,165,1.385,166,1.385,167,0.991,168,1.385,169,1.385,170,1.385,171,0.991,172,0.991,173,0.991,188,1.094,189,2.803,192,1.734,194,1.544,195,1.544,206,3.1,207,1.605,211,1.848,344,2.205,345,2.205,346,2.205,347,2.205,348,2.205,349,2.205,350,2.205]],["title/modules/PeopleModule.html",[0,0.847,13,1.924]],["body/modules/PeopleModule.html",[0,1.507,2,1.69,3,1.69,4,1.986,5,1.986,6,1.69,7,2.618,8,2.618,12,0.03,13,3.766,18,2.426,19,1.986,20,1.986,21,0.501,22,0.501,23,0.444,26,0.611,40,1.143,100,0.501,101,0.444,102,0.025,103,0.025,177,3.236,351,3.704,352,4.421,353,3.704,354,4.421,355,4.421]],["title/injectables/PeopleService.html",[177,1.602,244,0.99]],["body/injectables/PeopleService.html",[12,0.031,21,0.393,22,0.393,23,0.349,26,0.589,40,0.897,64,1.942,68,2.296,71,1.767,92,0.883,94,1.379,100,0.393,101,0.349,102,0.021,103,0.021,107,0.487,108,1.293,123,0.715,131,1.677,142,0.644,177,2.261,185,2.906,186,1.837,187,2.712,188,1.511,192,1.813,194,1.049,195,1.049,197,1.511,198,1.398,207,1.398,217,1.634,218,1.837,222,1.696,244,1.398,245,1.696,263,2.261,265,1.854,266,1.854,269,1.696,270,2.543,271,2.471,273,1.854,356,2.906,357,5.2,358,5.546,359,4.623,360,3.469,361,4.623,362,3.469,363,4.623,364,3.469,365,4.357,366,3.469,367,4.623,368,3.469,369,3.469,370,3.469,371,4.623,372,3.469,373,3.469,374,3.469,375,3.469,376,2.038]],["title/interfaces/Planets.html",[104,0.99,115,0.99]],["body/interfaces/Planets.html",[12,0.03,21,0.265,22,0.265,23,0.235,26,0.265,68,0.97,89,0.895,91,2.706,92,1.147,93,1.736,94,1.553,95,1.573,98,1.736,100,0.656,102,0.016,103,0.016,104,1.58,105,1.338,106,1.145,107,0.329,108,0.979,109,1.052,110,1.82,111,1.052,112,1.82,113,1.329,114,1.052,115,1.407,116,1.052,117,1.052,118,1.268,119,1.268,120,1.052,121,1.268,122,2.792,123,0.972,124,1.252,125,1.145,126,1.573,127,1.573,128,1.052,129,1.252,130,1.288,131,1.638,132,1.145,133,1.145,134,1.145,135,1.145,136,1.145,137,1.145,138,2.09,139,2.09,140,1.4,141,2.09,142,1.006,143,2.09,144,2.09,145,2.09,146,2.09,147,2.09,148,2.09,149,1.052,150,1.052,151,1.052,152,1.052,153,1.052,154,1.052,155,1.052,156,1.052,157,0.895,158,1.052,159,1.449,160,1.449,161,1.449,162,1.449,163,1.052,164,1.449,165,1.449,166,1.449,167,1.052,168,1.449,169,1.449,170,1.449,171,1.052,172,1.052,173,1.052]],["title/modules/PlanetsModule.html",[0,0.847,14,1.924]],["body/modules/PlanetsModule.html",[0,1.516,2,1.713,3,1.713,4,2.013,5,2.013,6,1.713,7,2.634,8,2.013,12,0.03,14,3.731,18,2.445,19,2.013,20,2.013,21,0.507,22,0.507,23,0.45,26,0.664,40,1.159,100,0.507,101,0.45,102,0.025,103,0.025,377,3.754,378,3.754,379,3.395,380,4.481,381,3.544,382,4.481,383,3.754]],["title/classes/PlanetsResolver.html",[101,0.329,381,2.133]],["body/classes/PlanetsResolver.html",[12,0.031,21,0.456,22,0.456,23,0.405,26,0.577,45,1.968,64,1.826,78,2.151,92,0.949,100,0.456,101,0.405,102,0.023,103,0.023,107,0.564,113,1.333,115,1.54,123,0.788,130,1.444,134,1.968,142,0.946,183,2.151,186,1.422,188,1.664,190,2.151,192,1.664,194,1.54,195,1.54,197,1.315,198,1.217,202,2.364,203,3.282,206,2.151,207,1.217,208,2.364,212,2.364,213,2.991,215,2.151,217,1.799,218,1.422,232,2.721,254,2.108,379,3.137,381,3.823,383,3.372,384,3.372,385,4.024,386,4.024,387,4.024,388,4.024,389,2.621,390,4.024,391,4.024]],["title/injectables/PlanetsService.html",[244,0.99,379,1.75]],["body/injectables/PlanetsService.html",[12,0.031,21,0.332,22,0.332,23,0.295,26,0.585,40,0.759,64,1.846,71,1.576,92,0.81,94,0.984,100,0.332,101,0.295,102,0.024,103,0.019,107,0.412,108,1.154,110,1.348,112,1.348,113,1.138,115,1.442,123,0.638,130,0.759,131,1.564,138,1.853,139,1.853,140,1.066,141,1.853,142,0.96,143,1.853,144,1.853,145,1.853,146,1.853,147,1.853,148,1.853,185,2.331,186,1.684,187,2.529,188,1.348,192,1.558,194,1.247,195,1.247,197,0.959,198,0.888,207,1.247,217,1.827,218,1.996,222,2.529,244,1.247,245,1.435,247,2.423,248,2.423,253,2.423,254,1.973,256,2.423,262,1.724,263,2.017,265,1.569,266,1.569,267,1.724,268,2.423,269,2.017,270,2.983,271,2.763,273,2.204,274,2.423,275,2.423,276,2.423,287,1.724,288,1.724,289,1.724,290,2.423,291,2.423,292,2.423,293,2.423,295,1.724,296,1.724,297,1.724,308,1.724,309,1.724,310,1.724,376,1.724,379,2.204,392,2.459,393,2.935,394,2.935,395,4.123,396,2.935,397,2.459,398,2.935,399,1.911,400,2.935,401,2.935,402,2.935,403,2.935,404,2.935,405,2.935,406,2.935,407,2.935,408,1.911,409,2.935,410,2.935,411,2.935,412,2.935,413,2.935,414,2.935,415,2.935,416,2.935,417,2.935,418,2.935,419,1.911,420,2.935]],["title/interfaces/Species.html",[104,0.99,118,0.99]],["body/interfaces/Species.html",[12,0.03,21,0.263,22,0.263,23,0.233,26,0.263,68,0.96,89,0.886,91,2.701,92,1.147,93,1.726,94,1.552,95,1.562,98,1.726,100,0.655,102,0.016,103,0.016,104,1.574,105,1.328,106,1.134,107,0.325,108,0.972,109,1.042,110,1.814,111,1.042,112,1.814,113,1.325,114,1.042,115,1.261,116,1.042,117,1.042,118,1.4,119,1.261,120,1.042,121,1.261,122,2.788,123,0.975,124,1.24,125,1.134,126,1.562,127,1.562,128,1.042,129,1.24,130,1.282,131,1.632,132,1.134,133,1.134,134,1.134,135,1.134,136,1.134,137,1.134,138,1.042,139,1.042,140,1.396,141,1.042,142,1.002,143,1.042,144,1.042,145,1.042,146,1.042,147,1.042,148,1.042,149,2.08,150,2.08,151,2.08,152,2.08,153,2.08,154,2.08,155,2.08,156,2.08,157,1.769,158,2.08,159,1.439,160,1.439,161,1.439,162,1.439,163,1.042,164,1.439,165,1.439,166,1.439,167,1.042,168,1.439,169,1.439,170,1.439,171,1.042,172,1.042,173,1.042]],["title/modules/SpeciesModule.html",[0,0.847,15,1.924]],["body/modules/SpeciesModule.html",[0,1.516,2,1.713,3,1.713,4,2.013,5,2.013,6,1.713,7,2.634,8,2.013,12,0.03,15,3.731,18,2.445,19,2.013,20,2.013,21,0.507,22,0.507,23,0.45,26,0.664,40,1.159,100,0.507,101,0.45,102,0.025,103,0.025,421,3.754,422,3.754,423,3.395,424,4.481,425,3.544,426,4.481,427,3.754]],["title/classes/SpeciesResolver.html",[101,0.329,425,2.133]],["body/classes/SpeciesResolver.html",[12,0.031,21,0.456,22,0.456,23,0.405,26,0.577,45,1.968,64,1.826,78,2.151,92,0.949,100,0.456,101,0.405,102,0.023,103,0.023,107,0.564,113,1.333,118,1.54,123,0.788,130,1.444,135,1.968,142,0.946,183,2.151,186,1.422,188,1.664,190,2.151,192,1.664,194,1.54,195,1.54,197,1.315,198,1.217,202,2.364,203,3.282,206,2.151,207,1.217,208,2.364,212,2.364,213,2.991,215,2.151,217,1.799,218,1.422,232,2.721,254,2.108,389,2.621,423,3.137,425,3.823,427,3.372,428,3.372,429,4.024,430,4.024,431,4.024,432,4.024,433,4.024,434,4.024]],["title/injectables/SpeciesService.html",[244,0.99,423,1.75]],["body/injectables/SpeciesService.html",[12,0.031,21,0.33,22,0.33,23,0.293,26,0.584,40,0.754,64,1.842,71,1.568,92,0.806,94,0.98,100,0.33,101,0.293,102,0.024,103,0.019,107,0.409,108,1.148,110,1.341,112,1.341,113,1.134,118,1.436,123,0.635,130,0.754,131,1.559,140,1.061,142,0.957,149,1.844,150,1.844,151,1.844,152,1.844,153,1.844,154,1.844,155,1.844,156,1.844,157,1.568,158,1.844,185,2.322,186,1.678,187,2.521,188,1.341,192,1.552,194,1.241,195,1.241,197,0.953,198,0.881,207,1.241,217,1.821,218,1.991,222,2.521,244,1.241,245,1.425,247,2.411,248,2.411,253,2.411,254,1.966,256,2.411,262,1.712,263,2.007,265,1.558,266,1.558,267,1.712,268,2.411,269,2.007,270,2.979,271,2.755,273,2.193,274,2.411,275,2.411,276,2.411,287,1.712,288,1.712,289,1.712,290,2.411,291,2.411,292,2.411,293,2.411,295,1.712,296,1.712,297,1.712,308,1.712,309,1.712,310,1.712,376,1.712,399,1.898,408,1.898,419,1.898,423,2.193,435,2.442,436,2.914,437,2.914,438,4.103,439,2.914,440,2.442,441,2.914,442,2.914,443,2.914,444,2.914,445,2.914,446,2.914,447,2.914,448,2.914,449,2.914,450,2.914,451,2.914,452,2.914,453,2.914,454,2.914,455,2.914,456,2.914,457,2.914,458,2.914,459,2.914,460,2.914,461,2.914,462,2.914]],["title/interfaces/Starships.html",[104,0.99,119,0.99]],["body/interfaces/Starships.html",[12,0.03,21,0.255,22,0.255,23,0.227,26,0.255,68,0.933,89,0.861,91,2.685,92,1.148,93,1.696,94,1.547,95,1.528,98,1.696,100,0.65,102,0.016,103,0.016,104,1.557,105,1.3,106,1.102,107,0.316,108,0.951,109,1.012,110,1.799,111,1.012,112,1.799,113,1.314,114,1.012,115,1.239,116,1.012,117,1.012,118,1.239,119,1.38,120,1.012,121,1.239,122,2.775,123,0.983,124,1.204,125,1.102,126,1.528,127,1.528,128,1.012,129,1.204,130,1.266,131,1.617,132,1.102,133,1.102,134,1.102,135,1.102,136,1.102,137,1.102,138,1.012,139,1.012,140,1.382,141,1.012,142,0.993,143,1.012,144,1.012,145,1.012,146,1.012,147,1.012,148,1.012,149,1.012,150,1.012,151,1.012,152,1.012,153,1.012,154,1.012,155,1.012,156,1.012,157,0.861,158,1.012,159,2.027,160,2.027,161,2.027,162,2.027,163,2.05,164,2.027,165,2.027,166,2.027,167,2.05,168,2.027,169,2.027,170,2.027,171,2.05,172,1.012,173,1.012]],["title/modules/StarshipsModule.html",[0,0.847,16,1.924]],["body/modules/StarshipsModule.html",[0,1.516,2,1.713,3,1.713,4,2.013,5,2.013,6,1.713,7,2.634,8,2.013,12,0.03,16,3.731,18,2.445,19,2.013,20,2.013,21,0.507,22,0.507,23,0.45,26,0.664,40,1.159,100,0.507,101,0.45,102,0.025,103,0.025,463,3.754,464,3.754,465,3.395,466,4.481,467,3.544,468,4.481,469,3.754]],["title/classes/StarshipsResolver.html",[101,0.329,467,2.133]],["body/classes/StarshipsResolver.html",[12,0.031,21,0.456,22,0.456,23,0.405,26,0.577,45,1.968,64,1.826,78,2.151,92,0.949,100,0.456,101,0.405,102,0.023,103,0.023,107,0.564,113,1.333,119,1.54,123,0.788,130,1.444,136,1.968,142,0.946,183,2.151,186,1.422,188,1.664,190,2.151,192,1.664,194,1.54,195,1.54,197,1.315,198,1.217,202,2.364,203,3.282,206,2.151,207,1.217,208,2.364,212,2.364,213,2.991,215,2.151,217,1.799,218,1.422,232,2.721,254,2.108,389,2.621,465,3.137,467,3.823,469,3.372,470,3.372,471,4.024,472,4.024,473,4.024,474,4.024,475,4.024,476,4.024]],["title/injectables/StarshipsService.html",[244,0.99,465,1.75]],["body/injectables/StarshipsService.html",[12,0.031,21,0.323,22,0.323,23,0.287,26,0.578,40,0.738,64,1.83,71,1.545,92,0.797,94,0.965,100,0.323,101,0.287,102,0.023,103,0.018,107,0.4,108,1.131,110,1.322,112,1.322,113,1.121,119,1.42,123,0.625,130,0.738,131,1.544,140,1.045,142,0.948,159,1.674,160,1.674,161,1.674,162,1.674,163,1.817,164,1.674,165,1.674,166,1.674,167,1.817,168,1.674,169,1.674,170,1.674,171,1.817,185,2.296,186,1.659,187,2.497,188,1.322,192,1.535,194,1.223,195,1.223,197,0.933,198,0.863,207,1.223,217,1.804,218,1.978,222,2.497,244,1.223,245,1.396,247,2.375,248,2.375,253,2.375,254,1.944,256,2.375,262,1.677,263,1.977,265,1.525,266,1.525,267,1.677,268,2.375,269,1.977,270,2.965,271,2.729,273,2.161,274,2.375,275,2.375,276,2.375,287,1.677,288,1.677,289,1.677,290,2.375,291,2.375,292,2.375,293,2.375,295,1.677,296,1.677,297,1.677,308,1.677,309,1.677,310,1.677,376,1.677,399,1.859,408,1.859,419,1.859,465,2.161,477,2.391,478,2.854,479,2.854,480,4.043,481,2.854,482,2.391,483,2.854,484,2.391,485,2.391,486,2.391,487,2.391,488,2.854,489,2.391,490,2.391,491,2.391,492,2.854,493,2.391,494,2.391,495,2.854,496,2.391,497,2.854,498,2.391,499,2.391,500,2.391,501,2.391,502,2.854,503,2.391,504,2.391,505,2.391,506,2.854,507,2.391,508,2.391,509,2.854,510,2.391]],["title/interfaces/Vehicles.html",[104,0.99,121,0.99]],["body/interfaces/Vehicles.html",[12,0.03,21,0.26,22,0.26,23,0.231,26,0.26,68,0.951,89,0.878,91,2.695,92,1.148,93,1.715,94,1.55,95,1.55,98,1.715,100,0.653,102,0.016,103,0.016,104,1.569,105,1.319,106,1.123,107,0.322,108,0.965,109,1.032,110,1.809,111,1.032,112,1.809,113,1.321,114,1.032,115,1.253,116,1.032,117,1.032,118,1.253,119,1.253,120,1.032,121,1.393,122,2.783,123,0.978,124,1.228,125,1.123,126,1.55,127,1.55,128,1.032,129,1.228,130,1.277,131,1.627,132,1.123,133,1.123,134,1.123,135,1.123,136,1.123,137,1.123,138,1.032,139,1.032,140,1.391,141,1.032,142,0.999,143,1.032,144,1.032,145,1.032,146,1.032,147,1.032,148,1.032,149,1.032,150,1.032,151,1.032,152,1.032,153,1.032,154,1.032,155,1.032,156,1.032,157,0.878,158,1.032,159,2.044,160,2.044,161,2.044,162,2.044,163,1.032,164,2.044,165,2.044,166,2.044,167,1.032,168,2.044,169,2.044,170,2.044,171,1.032,172,2.07,173,1.032]],["title/modules/VehiclesModule.html",[0,0.847,17,1.924]],["body/modules/VehiclesModule.html",[0,1.516,2,1.713,3,1.713,4,2.013,5,2.013,6,1.713,7,2.634,8,2.013,12,0.03,17,3.731,18,2.445,19,2.013,20,2.013,21,0.507,22,0.507,23,0.45,26,0.664,40,1.159,100,0.507,101,0.45,102,0.025,103,0.025,511,3.754,512,3.754,513,3.395,514,4.481,515,3.544,516,4.481,517,3.754]],["title/classes/VehiclesResolver.html",[101,0.329,515,2.133]],["body/classes/VehiclesResolver.html",[12,0.031,21,0.456,22,0.456,23,0.405,26,0.577,45,1.968,64,1.826,78,2.151,92,0.949,100,0.456,101,0.405,102,0.023,103,0.023,107,0.564,113,1.333,121,1.54,123,0.788,130,1.444,137,1.968,142,0.946,183,2.151,186,1.422,188,1.664,190,2.151,192,1.664,194,1.54,195,1.54,197,1.315,198,1.217,202,2.364,203,3.282,206,2.151,207,1.217,208,2.364,212,2.364,213,2.991,215,2.151,217,1.799,218,1.422,232,2.721,254,2.108,389,2.621,513,3.137,515,3.823,517,3.372,518,3.372,519,4.024,520,4.024,521,4.024,522,4.024,523,4.024,524,4.024]],["title/injectables/VehiclesService.html",[244,0.99,513,1.75]],["body/injectables/VehiclesService.html",[12,0.031,21,0.328,22,0.328,23,0.291,26,0.582,40,0.748,64,1.838,71,1.561,92,0.803,94,0.975,100,0.328,101,0.291,102,0.023,103,0.019,107,0.406,108,1.142,110,1.335,112,1.335,113,1.129,121,1.431,123,0.632,130,0.748,131,1.554,140,1.056,142,0.954,159,1.69,160,1.69,161,1.69,162,1.69,164,1.69,165,1.69,166,1.69,168,1.69,169,1.69,170,1.69,172,1.834,185,2.313,186,1.672,187,2.513,188,1.335,192,1.546,194,1.235,195,1.235,197,0.946,198,0.875,207,1.235,217,1.816,218,1.987,222,2.513,244,1.235,245,1.415,247,2.399,248,2.399,253,2.399,254,1.958,256,2.399,262,1.7,263,1.997,265,1.547,266,1.547,267,1.7,268,2.399,269,1.997,270,2.974,271,2.746,273,2.182,274,2.399,275,2.399,276,2.399,287,1.7,288,1.7,289,1.7,290,2.399,291,2.399,292,2.399,293,2.399,295,1.7,296,1.7,297,1.7,308,1.7,309,1.7,310,1.7,376,1.7,399,1.885,408,1.885,419,1.885,484,2.425,485,2.425,486,2.425,487,2.425,489,2.425,490,2.425,491,2.425,493,2.425,494,2.425,496,2.425,498,2.425,499,2.425,500,2.425,501,2.425,503,2.425,504,2.425,505,2.425,507,2.425,508,2.425,510,2.425,513,2.182,525,2.425,526,2.894,527,2.894,528,4.083,529,2.894,530,2.425,531,2.894,532,2.894,533,2.894,534,2.894]],["title/coverage.html",[535,3.727]],["body/coverage.html",[6,0.917,12,0.031,23,0.241,39,1.563,71,0.917,89,2.228,93,0.994,94,0.573,98,0.994,101,0.506,102,0.016,103,0.016,104,1.594,105,0.917,115,1.078,118,1.286,119,1.286,121,1.286,122,1.078,123,0.926,128,1.078,140,0.922,157,1.363,176,1.283,177,1.174,180,1.563,184,2.011,244,1.594,246,2.011,320,5.626,356,2.011,379,1.283,381,1.563,384,2.011,392,2.011,423,1.283,425,1.563,428,2.011,435,2.011,465,1.283,467,1.563,470,2.011,477,2.011,513,1.283,515,1.563,518,2.011,525,2.011,535,2.011,536,2.4,537,2.4,538,2.4,539,2.606,540,6.506,541,2.011,542,6.632,543,5.915,544,2.011,545,2.606,546,2.011,547,2.606,548,2.011,549,2.606,550,2.011,551,2.606,552,2.011,553,2.606,554,2.011,555,2.4,556,2.4,557,2.4,558,2.4,559,2.4,560,2.4,561,2.4,562,2.4,563,2.011,564,3.565,565,2.011,566,2.011,567,4.215,568,4.416,569,2.011,570,4.215,571,2.011,572,2.987,573,3.944,574,2.011,575,2.011,576,3.944,577,2.011,578,3.944,579,2.011,580,3.944,581,2.011,582,2.4,583,4.708,584,4.708,585,2.4,586,2.4]],["title/dependencies.html",[3,1.503,587,2.3]],["body/dependencies.html",[3,1.65,12,0.031,30,3.617,31,4.458,32,3.617,35,5.179,36,3.617,38,3.617,39,2.812,40,1.116,43,3.617,45,2.112,50,3.617,51,3.617,101,0.535,102,0.024,103,0.024,263,2.112,588,4.318,589,4.318,590,4.318,591,5.767,592,4.318,593,4.318,594,4.318,595,4.318,596,4.318,597,4.318,598,4.318,599,4.318,600,4.318,601,4.318,602,4.318,603,4.318,604,4.318,605,4.318,606,4.318,607,4.318,608,4.318,609,4.318,610,4.318,611,4.318,612,4.318,613,4.318]],["title/miscellaneous/enumerations.html",[614,1.234,615,3.295]],["body/miscellaneous/enumerations.html",[12,0.029,89,1.909,102,0.027,103,0.027,107,0.7,125,2.839,126,2.608,127,2.608,198,1.756,614,2.244,615,4.184,616,4.184]],["title/miscellaneous/functions.html",[614,1.234,617,3.295]],["body/miscellaneous/functions.html",[6,2.314,12,0.029,102,0.026,103,0.026,107,0.678,123,0.748,142,0.898,173,2.559,194,1.462,195,1.462,207,1.462,269,2.364,270,2.785,563,4.05,565,4.05,566,4.771,614,2.172,617,4.05,618,4.833,619,4.833,620,4.833,621,4.833]],["title/index.html",[107,0.385,622,2.746,623,2.746]],["body/index.html",[12,0.03,70,3.858,102,0.025,103,0.025,624,3.858,625,4.605,626,4.605,627,5.533,628,4.605,629,5.932,630,6.392,631,4.605,632,5.932,633,4.605,634,4.605,635,4.605,636,4.605,637,5.533,638,4.605,639,4.605,640,5.533,641,4.605,642,4.605]],["title/modules.html",[2,1.7]],["body/modules.html",[1,3.059,2,1.795,11,2.759,12,0.026,13,2.759,14,2.759,15,2.759,16,2.759,17,2.759,102,0.026,103,0.026,643,6.489,644,6.489,645,6.489,646,6.489]],["title/overview.html",[647,3.727]],["body/overview.html",[0,0.986,1,4.264,2,1.457,3,1.457,4,1.713,5,1.713,6,1.457,7,1.713,8,1.713,9,3.193,10,3.193,11,3.645,12,0.03,13,3.583,14,3.499,15,3.499,16,3.499,17,3.499,18,2.21,19,1.713,20,1.713,102,0.022,103,0.022,106,1.864,174,3.193,175,3.193,176,2.91,177,3.075,183,2.037,245,1.864,351,3.193,353,3.193,377,3.193,378,3.193,379,2.91,421,3.193,422,3.193,423,2.91,463,3.193,464,3.193,465,2.91,511,3.193,512,3.193,513,2.91,647,3.193,648,3.812,649,4.918,650,3.812]],["title/properties.html",[108,1.1,587,2.3]],["body/properties.html",[12,0.03,102,0.027,103,0.027,108,1.414,624,4.235,651,5.054,652,5.054,653,5.054,654,5.054,655,5.054]],["title/miscellaneous/typealiases.html",[614,1.234,656,3.933]],["body/miscellaneous/typealiases.html",[12,0.028,39,3.493,68,1.811,89,1.672,91,1.966,92,0.911,93,2.22,94,1.28,95,1.966,98,2.22,102,0.024,103,0.024,107,0.614,115,1.622,118,1.622,119,1.622,121,1.622,122,2.41,123,0.83,140,1.387,157,2.05,173,1.966,539,3.198,544,3.665,545,3.198,547,3.198,549,3.198,551,3.198,553,3.198,614,1.966,616,5.066,657,4.375,658,3.665,659,3.665,660,3.665,661,4.375,662,3.665,663,3.665,664,3.665,665,6.315,666,4.375]],["title/miscellaneous/variables.html",[614,1.234,667,3.295]],["body/miscellaneous/variables.html",[12,0.03,71,2.156,82,1.651,92,0.195,94,1.276,102,0.009,103,0.009,105,0.439,107,0.161,109,1.163,110,1.748,111,1.163,112,1.748,113,0.824,114,0.516,115,0.928,116,1.163,117,0.516,118,1.286,119,1.286,120,1.163,121,1.286,123,0.755,138,1.163,139,1.163,140,1.363,141,1.163,142,0.947,143,0.516,144,1.163,145,1.163,146,0.516,147,0.516,148,1.163,149,0.516,150,0.516,151,1.163,152,1.163,153,0.516,154,0.516,155,1.552,156,1.163,157,1.32,158,0.516,159,0.816,160,1.56,161,0.816,162,1.56,163,0.516,164,1.56,165,1.56,166,0.816,167,1.163,168,1.56,169,1.56,170,1.56,171,0.516,172,0.516,197,1.93,198,1.786,205,1.651,232,2.375,264,0.962,365,0.962,397,0.962,440,0.962,482,0.962,530,0.962,539,0.84,541,1.651,545,0.84,546,1.651,547,0.84,548,1.651,549,0.84,550,1.651,551,0.84,552,1.651,553,0.84,554,1.651,567,0.962,568,4.09,569,1.651,570,3.862,571,1.651,572,0.962,573,0.962,574,2.168,575,1.651,576,0.962,577,1.651,578,0.962,579,1.651,580,0.962,581,1.651,614,0.516,658,3.157,659,2.168,660,2.893,662,2.893,663,2.893,664,2.893,667,0.962,668,1.97,669,3.768,670,2.588,671,2.588,672,2.588,673,3.068,674,1.149,675,3.068,676,2.588,677,2.588,678,1.149,679,1.149,680,1.149,681,1.149,682,2.588,683,1.149,684,2.588,685,1.149,686,1.149,687,2.588,688,1.149,689,2.588,690,1.149,691,2.588,692,1.149,693,2.588,694,2.588,695,1.149,696,2.588,697,2.588,698,1.149,699,2.588,700,2.588,701,1.149,702,2.588,703,2.588,704,1.149,705,1.149,706,2.588,707,1.149,708,2.588,709,1.149,710,2.588,711,2.588,712,1.97,713,1.97,714,1.97,715,1.97,716,1.97,717,1.97,718,1.97,719,1.97,720,1.97,721,1.97,722,1.97,723,1.97,724,1.97,725,1.97,726,1.97,727,1.97,728,1.97,729,1.97,730,1.97,731,1.97,732,1.97,733,1.97,734,1.97,735,1.97,736,1.97,737,1.97,738,1.97,739,1.97,740,1.97,741,3.453,742,1.97,743,1.97,744,3.453,745,5.639,746,5.639,747,1.97,748,1.97,749,1.97,750,3.453,751,1.149,752,1.149,753,1.149,754,1.97,755,1.149,756,1.97,757,1.149,758,1.97,759,1.149,760,1.97,761,1.149,762,1.97,763,2.588,764,1.97,765,1.149,766,1.97,767,1.149,768,4.444,769,1.149,770,1.149,771,1.149,772,1.149,773,1.149,774,1.149,775,1.149,776,1.149,777,1.149,778,1.149,779,3.453,780,1.97,781,1.97,782,1.97,783,1.97,784,1.97,785,1.97,786,1.97,787,1.97,788,1.97,789,1.97,790,1.97,791,1.97,792,1.97,793,1.97,794,1.97,795,1.97,796,1.97,797,1.97,798,1.97,799,1.97,800,1.97,801,1.97,802,3.068,803,1.97,804,1.97,805,1.97,806,1.97,807,3.068,808,1.97,809,1.97,810,1.97,811,1.97,812,1.97,813,1.97,814,1.97,815,1.97,816,1.97,817,1.97,818,1.97,819,1.97,820,3.453,821,1.97,822,3.068,823,3.768,824,1.97,825,1.97,826,3.068,827,3.068,828,1.97,829,1.97,830,3.068,831,1.97,832,3.768,833,1.97,834,1.97,835,3.068,836,1.97,837,1.97,838,1.97,839,1.97,840,1.97,841,1.97,842,1.97,843,1.97,844,1.97,845,1.97,846,3.068,847,1.97,848,1.97,849,1.97,850,1.97,851,1.97,852,1.97,853,1.97,854,1.97,855,1.97,856,1.97,857,1.97,858,1.97,859,1.97,860,1.97,861,3.768,862,5.347,863,4.882,864,6.376,865,3.768]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":320,"title":{},"body":{"injectables/FilmsService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":652,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09t13:50:49.641000z",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09t13:50:51.644000z",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":232,"title":{},"body":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{},"miscellaneous/variables.html":{}}}],["1.24.0",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["1.7.9",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["10465",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10t13:52:11.567000z",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10t14:20:33.369000z",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10t15:36:25.724000z",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2.2",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150000",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.9.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["165",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["172",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["180",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1999",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19bby",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19t16:52:55.740000z",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":273,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["200000",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t10:54:07.216000z",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t20:58:18.411000z",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t21:17:56.891000z",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t21:23:49.867000z",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t21:30:21.661000z",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t21:36:42.136000z",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["3.10.6",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["3.12.6",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["3.24.1",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000000",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["304",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3500000",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36.8",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.2",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["46",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":650,"title":{},"body":{"overview.html":{}}}],["5.10.6",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["50000",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":649,"title":{},"body":{"overview.html":{}}}],["60",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":648,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["77",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["950",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_url",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/typealiases.html":{}}}],["_wordb",{"_index":237,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["acc",{"_index":230,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["acc[lowercaseword",{"_index":231,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["acc[word",{"_index":241,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["additionalheader",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["alarming",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":657,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all\\r\\nshipping",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amber",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":626,"title":{},"body":{"index.html":{}}}],["apifilms",{"_index":264,"title":{},"body":{"injectables/FilmsService.html":{},"miscellaneous/variables.html":{}}}],["apiplanets",{"_index":397,"title":{},"body":{"injectables/PlanetsService.html":{},"miscellaneous/variables.html":{}}}],["apippeople",{"_index":365,"title":{},"body":{"injectables/PeopleService.html":{},"miscellaneous/variables.html":{}}}],["apiresponse",{"_index":265,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["apispecies",{"_index":440,"title":{},"body":{"injectables/SpeciesService.html":{},"miscellaneous/variables.html":{}}}],["apistarships",{"_index":482,"title":{},"body":{"injectables/StarshipsService.html":{},"miscellaneous/variables.html":{}}}],["apivehicles",{"_index":530,"title":{},"body":{"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":212,"title":{},"body":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["args('page",{"_index":389,"title":{},"body":{"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["arid",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(currentmostname",{"_index":342,"title":{},"body":{"injectables/FilmsService.html":{}}}],["asc",{"_index":126,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/enumerations.html":{}}}],["asian",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["author",{"_index":655,"title":{},"body":{"properties.html":{}}}],["average_height",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["average_lifespan",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["averageheight",{"_index":149,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["averagelifespan",{"_index":150,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":218,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["axios",{"_index":263,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{},"dependencies.html":{}}}],["axios.get(`${process.env.base_url}/films/${id",{"_index":272,"title":{},"body":{"injectables/FilmsService.html":{}}}],["axios.get(`${process.env.base_url}/planets/${id",{"_index":398,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["axios.get(`${process.env.base_url}/species/${id",{"_index":441,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["axios.get(`${process.env.base_url}/starships/${id",{"_index":483,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["axios.get(`${process.env.base_url}/vehicles/${id",{"_index":531,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["axios.get>(`${process.env.base_url}/films/?page=${page",{"_index":294,"title":{},"body":{"injectables/FilmsService.html":{}}}],["axios.get>(`${process.env.base_url}/planets/?page=${page",{"_index":410,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["axios.get>(`${process.env.base_url}/species/?page=${page",{"_index":452,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["axios.get>(`${process.env.base_url}/starships/?page=${page",{"_index":497,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["axios.get>(`${process.env.base_url}/vehicles/?page=${page",{"_index":533,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["axios.get>(string(url",{"_index":368,"title":{},"body":{"injectables/PeopleService.html":{}}}],["axiosresponse",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basic",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battleships",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birth_year",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockade",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blond",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blonde",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brown",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":646,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":643,"title":{},"body":{"modules.html":{}}}],["build",{"_index":632,"title":{},"body":{"index.html":{}}}],["cache",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cargo_capacity",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cargocapacity",{"_index":159,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":291,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["caucasian",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chain",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chancellor",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characters",{"_index":109,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":101,"title":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":183,"title":{},"body":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{},"overview.html":{}}}],["classification",{"_index":151,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["climate",{"_index":138,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_filmsmodule",{"_index":174,"title":{},"body":{"modules/FilmsModule.html":{},"overview.html":{}}}],["cluster_filmsmodule_providers",{"_index":175,"title":{},"body":{"modules/FilmsModule.html":{},"overview.html":{}}}],["cluster_peoplemodule",{"_index":351,"title":{},"body":{"modules/PeopleModule.html":{},"overview.html":{}}}],["cluster_peoplemodule_exports",{"_index":353,"title":{},"body":{"modules/PeopleModule.html":{},"overview.html":{}}}],["cluster_peoplemodule_providers",{"_index":352,"title":{},"body":{"modules/PeopleModule.html":{}}}],["cluster_planetsmodule",{"_index":377,"title":{},"body":{"modules/PlanetsModule.html":{},"overview.html":{}}}],["cluster_planetsmodule_providers",{"_index":378,"title":{},"body":{"modules/PlanetsModule.html":{},"overview.html":{}}}],["cluster_speciesmodule",{"_index":421,"title":{},"body":{"modules/SpeciesModule.html":{},"overview.html":{}}}],["cluster_speciesmodule_providers",{"_index":422,"title":{},"body":{"modules/SpeciesModule.html":{},"overview.html":{}}}],["cluster_starshipsmodule",{"_index":463,"title":{},"body":{"modules/StarshipsModule.html":{},"overview.html":{}}}],["cluster_starshipsmodule_providers",{"_index":464,"title":{},"body":{"modules/StarshipsModule.html":{},"overview.html":{}}}],["cluster_vehiclesmodule",{"_index":511,"title":{},"body":{"modules/VehiclesModule.html":{},"overview.html":{}}}],["cluster_vehiclesmodule_providers",{"_index":512,"title":{},"body":{"modules/VehiclesModule.html":{},"overview.html":{}}}],["configmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('node_environment",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_host",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_password",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["conflict",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["congress",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":222,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["constructor",{"_index":190,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["constructor(filmservice",{"_index":191,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["constructor(peopleservice",{"_index":251,"title":{},"body":{"injectables/FilmsService.html":{}}}],["constructor(planetsresolver",{"_index":385,"title":{},"body":{"classes/PlanetsResolver.html":{}}}],["constructor(private",{"_index":215,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["constructor(speciesresolver",{"_index":429,"title":{},"body":{"classes/SpeciesResolver.html":{}}}],["constructor(starshipsresolver",{"_index":471,"title":{},"body":{"classes/StarshipsResolver.html":{}}}],["constructor(vehiclesresolver",{"_index":519,"title":{},"body":{"classes/VehiclesResolver.html":{}}}],["consumables",{"_index":160,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":340,"title":{},"body":{"injectables/FilmsService.html":{}}}],["control",{"_index":331,"title":{},"body":{"injectables/FilmsService.html":{}}}],["corellia",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corellian",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corporation",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correctrequest",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corvette",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cost_in_credits",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["costincredits",{"_index":161,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":240,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["counta",{"_index":236,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["countb",{"_index":238,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["coverage",{"_index":535,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr90",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crawler",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":110,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["createrediscache",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["createrequest",{"_index":566,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrequest(data",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createrequest(films",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrequest(people",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrequest(planet",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrequest(species",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrequest(starships",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrequest(vehicles",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crew",{"_index":162,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["currentmostname",{"_index":321,"title":{},"body":{"injectables/FilmsService.html":{}}}],["customscalartypemapping",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["data",{"_index":269,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["data.average_height",{"_index":442,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.average_lifespan",{"_index":443,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.cargo_capacity",{"_index":484,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.characters",{"_index":277,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.classification",{"_index":444,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.climate",{"_index":405,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.consumables",{"_index":485,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.cost_in_credits",{"_index":486,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.created",{"_index":288,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.crew",{"_index":487,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.designation",{"_index":445,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.diameter",{"_index":400,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.director",{"_index":278,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.edited",{"_index":289,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.eye_colors",{"_index":446,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.films",{"_index":408,"title":{},"body":{"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.gravity",{"_index":403,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.hair_colors",{"_index":447,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.homeworld",{"_index":448,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.hyperdrive_rating",{"_index":488,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["data.language",{"_index":449,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.length",{"_index":496,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.manufacturer",{"_index":489,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.max_atmosphering_speed",{"_index":490,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.mglt",{"_index":492,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["data.model",{"_index":491,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.name",{"_index":399,"title":{},"body":{"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.next",{"_index":371,"title":{},"body":{"injectables/PeopleService.html":{}}}],["data.opening_crawl",{"_index":279,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.orbital_period",{"_index":402,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.passengers",{"_index":493,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.people",{"_index":450,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.pilots",{"_index":494,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.planets",{"_index":280,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.population",{"_index":404,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.producer",{"_index":281,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.release_date",{"_index":282,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.residents",{"_index":409,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.results.map(v",{"_index":295,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.rotation_period",{"_index":401,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.skin_colors",{"_index":451,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["data.species",{"_index":283,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.starship_class",{"_index":495,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["data.starships",{"_index":284,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.surface_water",{"_index":407,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.terrain",{"_index":406,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["data.title",{"_index":285,"title":{},"body":{"injectables/FilmsService.html":{}}}],["data.url",{"_index":287,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["data.vehicle_class",{"_index":532,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["data.vehicles",{"_index":286,"title":{},"body":{"injectables/FilmsService.html":{}}}],["date",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/typealiases.html":{}}}],["date('2014",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dateresolver",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["datetimeiso",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeisoresolver",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["deadly",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deadly\\r\\nbattleships",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debates",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debates\\r\\nthis",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["decorators",{"_index":202,"title":{},"body":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["default",{"_index":197,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":192,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["definitions",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":127,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":624,"title":{},"body":{"index.html":{},"properties.html":{}}}],["descriptionwords",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["desert",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designation",{"_index":152,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":634,"title":{},"body":{"index.html":{}}}],["diameter",{"_index":139,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["digger",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["director",{"_index":111,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":328,"title":{},"body":{"injectables/FilmsService.html":{}}}],["dispatched",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispute",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispute.\\r\\n\\r\\nhoping",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["driver",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["edited",{"_index":112,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["endlessly",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engineering",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engulfed",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":124,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{}}}],["enumerations",{"_index":615,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelop/response",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["episode_id",{"_index":205,"title":{},"body":{"classes/FilmsResolver.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":292,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["eslint",{"_index":327,"title":{},"body":{"injectables/FilmsService.html":{}}}],["events",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events,\\r\\nthe",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":629,"title":{},"body":{"index.html":{}}}],["export",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["express",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["eye_color",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eye_colors",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyecolors",{"_index":153,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["federation",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["film",{"_index":105,"title":{"interfaces/Film.html":{}},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["film.openingcrawl",{"_index":313,"title":{},"body":{"injectables/FilmsService.html":{}}}],["films",{"_index":140,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["films(@args('episode_id",{"_index":216,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["films(episode_id",{"_index":201,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["films(id",{"_index":129,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{}}}],["films.flatmap(film",{"_index":312,"title":{},"body":{"injectables/FilmsService.html":{}}}],["films.resolver.js",{"_index":181,"title":{},"body":{"modules/FilmsModule.html":{}}}],["films.service.js",{"_index":182,"title":{},"body":{"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{}}}],["films/films.module.js",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["filmservice",{"_index":196,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["filmsmodule",{"_index":11,"title":{"modules/FilmsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules.html":{},"overview.html":{}}}],["filmsresolver",{"_index":180,"title":{"classes/FilmsResolver.html":{}},"body":{"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"coverage.html":{}}}],["filmsschema",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filmsservice",{"_index":176,"title":{"injectables/FilmsService.html":{}},"body":{"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"coverage.html":{},"overview.html":{}}}],["filter(v",{"_index":317,"title":{},"body":{"injectables/FilmsService.html":{}}}],["findall",{"_index":247,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["findall(page",{"_index":253,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["findallnames",{"_index":358,"title":{},"body":{"injectables/PeopleService.html":{}}}],["findone",{"_index":248,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["findone(id",{"_index":256,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["frequency",{"_index":133,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{}}}],["function",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":617,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g')).toarray",{"_index":337,"title":{},"body":{"injectables/FilmsService.html":{}}}],["galactic",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["galaxy",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generated/graphql.js",{"_index":267,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["george",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getalldata",{"_index":359,"title":{},"body":{"injectables/PeopleService.html":{}}}],["getalldata(url",{"_index":361,"title":{},"body":{"injectables/PeopleService.html":{}}}],["getdescriptions",{"_index":249,"title":{},"body":{"injectables/FilmsService.html":{}}}],["getfrequency",{"_index":250,"title":{},"body":{"injectables/FilmsService.html":{}}}],["getting",{"_index":622,"title":{"index.html":{}},"body":{}}],["graphql",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["graphqlmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["gravity",{"_index":141,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["greedy",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["green",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grey",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guardians",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hair_color",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hair_colors",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haircolors",{"_index":154,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["has\\r\\nsecretly",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hazel",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hispanic",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["homeworld",{"_index":155,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["hoping",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["hours",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":262,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["httpexception(statustext",{"_index":275,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["https://swapi.py4e.com/api/films/1",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/films/2",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/films/3",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/films/4",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/films/5",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/films/6",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/films/7",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/people/1",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/people/2",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/planets/1",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/planets/9",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/species/1",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/starships/12",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/starships/2",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/starships/22",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/starships/31",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/vehicles/14",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/vehicles/30",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/vehicles/33",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://swapi.py4e.com/api/vehicles/4",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hyperdrive_rating",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hyperdriverating",{"_index":163,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":113,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["incorrect",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incorrectrequest",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":107,"title":{"index.html":{}},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["inject",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":244,"title":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{},"coverage.html":{}}}],["injectables",{"_index":245,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{},"overview.html":{}}}],["installcompile",{"_index":631,"title":{},"body":{"index.html":{}}}],["interface",{"_index":104,"title":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{}},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["interfaces",{"_index":106,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"overview.html":{}}}],["ioredis",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["iquery",{"_index":128,"title":{"interfaces/IQuery.html":{}},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{}}}],["isarray",{"_index":341,"title":{},"body":{"injectables/FilmsService.html":{}}}],["isglobal",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["jedi",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jedi\\r\\nknights",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["join(process.cwd",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["json",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jsonresolver",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["justice",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["knights",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["language",{"_index":156,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["length",{"_index":164,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":653,"title":{},"body":{"properties.html":{}}}],["line",{"_index":330,"title":{},"body":{"injectables/FilmsService.html":{}}}],["literal",{"_index":666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logger",{"_index":187,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["logger(filmsresolver.name",{"_index":199,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["logger(filmsservice.name",{"_index":260,"title":{},"body":{"injectables/FilmsService.html":{}}}],["logger(peopleservice.name",{"_index":363,"title":{},"body":{"injectables/PeopleService.html":{}}}],["logger(planetsservice.name",{"_index":395,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["logger(speciesservice.name",{"_index":438,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["logger(starshipsservice.name",{"_index":480,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["logger(vehiclesservice.name",{"_index":528,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["lowercaseword",{"_index":228,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["lucas",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["luke",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["male",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mammal",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manufacturer",{"_index":165,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["mass",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":333,"title":{},"body":{"injectables/FilmsService.html":{}}}],["matches.length",{"_index":339,"title":{},"body":{"injectables/FilmsService.html":{}}}],["matching",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matter",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matter\\r\\nwith",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max_atmosphering_speed",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxatmospheringspeed",{"_index":166,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["mccallum",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menace",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":188,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["mglt",{"_index":167,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["mining",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":614,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":637,"title":{},"body":{"index.html":{}}}],["model",{"_index":168,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"modules.html":{},"overview.html":{}}}],["months",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostmatches",{"_index":319,"title":{},"body":{"injectables/FilmsService.html":{}}}],["naboo",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["naboo.\\r\\n\\r\\nwhile",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":142,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":323,"title":{},"body":{"injectables/FilmsService.html":{}}}],["nestjs/common",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"modules/PlanetsModule.html":{},"injectables/PlanetsService.html":{},"modules/SpeciesModule.html":{},"injectables/SpeciesService.html":{},"modules/StarshipsModule.html":{},"injectables/StarshipsService.html":{},"modules/VehiclesModule.html":{},"injectables/VehiclesService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":329,"title":{},"body":{"injectables/FilmsService.html":{}}}],["nexturl",{"_index":367,"title":{},"body":{"injectables/PeopleService.html":{}}}],["node:path",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["null",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":122,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":254,"title":{},"body":{"injectables/FilmsService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["number(configservice.get('redis_port",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["number(v))[0",{"_index":297,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["object.entries(wordcounts",{"_index":234,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["occurances",{"_index":338,"title":{},"body":{"injectables/FilmsService.html":{}}}],["of\\r\\npeace",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opening_crawl",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openingcrawl",{"_index":114,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":195,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["orbital_period",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orbitalperiod",{"_index":143,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["outlying",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":647,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":587,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":130,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["parameters",{"_index":194,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["passengers",{"_index":169,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["peace",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["people",{"_index":157,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["people.service.js",{"_index":355,"title":{},"body":{"modules/PeopleModule.html":{}}}],["people/people.module.js",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["people/people.service.js",{"_index":179,"title":{},"body":{"modules/FilmsModule.html":{},"injectables/FilmsService.html":{}}}],["peoplemodule",{"_index":13,"title":{"modules/PeopleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PeopleModule.html":{},"modules.html":{},"overview.html":{}}}],["peopleresults",{"_index":357,"title":{},"body":{"injectables/PeopleService.html":{}}}],["peopleschema",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["peopleservice",{"_index":177,"title":{"injectables/PeopleService.html":{}},"body":{"modules/FilmsModule.html":{},"injectables/FilmsService.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"coverage.html":{},"overview.html":{}}}],["phantom",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pilots",{"_index":170,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["planet",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["planet\\r\\nof",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["planets",{"_index":115,"title":{"interfaces/Planets.html":{}},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["planets(@args('id",{"_index":388,"title":{},"body":{"classes/PlanetsResolver.html":{}}}],["planets(id",{"_index":134,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{}}}],["planets.resolver.js",{"_index":382,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["planets.service.js",{"_index":383,"title":{},"body":{"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{}}}],["planets/planets.module.js",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["planetsmodule",{"_index":14,"title":{"modules/PlanetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"modules.html":{},"overview.html":{}}}],["planetsresolver",{"_index":381,"title":{"classes/PlanetsResolver.html":{}},"body":{"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"coverage.html":{}}}],["planetsschema",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["planetsservice",{"_index":379,"title":{"injectables/PlanetsService.html":{}},"body":{"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"coverage.html":{},"overview.html":{}}}],["plugins",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["pnpm",{"_index":630,"title":{},"body":{"index.html":{}}}],["population",{"_index":144,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":185,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["producer",{"_index":116,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project",{"_index":627,"title":{},"body":{"index.html":{}}}],["promise",{"_index":131,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{}}}],["promise.reject(error",{"_index":293,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["promise.reject(new",{"_index":274,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["promise.resolve(results",{"_index":290,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["properties",{"_index":108,"title":{"properties.html":{}},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["query",{"_index":203,"title":{},"body":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["readonly",{"_index":186,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["red",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["reduce>((acc",{"_index":239,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["reflect",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":332,"title":{},"body":{"injectables/FilmsService.html":{}}}],["regexp(name.replace(/[\\x00",{"_index":335,"title":{},"body":{"injectables/FilmsService.html":{}}}],["release_date",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["releasedate",{"_index":117,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["replace(/[,.]|'s/g",{"_index":315,"title":{},"body":{"injectables/FilmsService.html":{}}}],["republic",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}],["residents",{"_index":145,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["resolve",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolver",{"_index":213,"title":{},"body":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["resolver('films",{"_index":214,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["resolvers",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["result",{"_index":242,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["results",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":217,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["returns",{"_index":207,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["rick",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotation_period",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotationperiod",{"_index":146,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":633,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["sand",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalars",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["secretly",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentient",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["session",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["settle",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":628,"title":{},"body":{"index.html":{}}}],["shipping",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skin_color",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skin_colors",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skincolors",{"_index":158,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["skywalker",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":211,"title":{},"body":{"classes/FilmsResolver.html":{},"interfaces/IQuery.html":{}}}],["sort(([_worda",{"_index":235,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["sortedwordcounts",{"_index":233,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["sortorder",{"_index":125,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"modules/FilmsModule.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"modules/PeopleModule.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"modules/PlanetsModule.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{}}}],["species",{"_index":118,"title":{"interfaces/Species.html":{}},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["species(@args('id",{"_index":432,"title":{},"body":{"classes/SpeciesResolver.html":{}}}],["species(id",{"_index":135,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{}}}],["species.resolver.js",{"_index":426,"title":{},"body":{"modules/SpeciesModule.html":{}}}],["species.service.js",{"_index":427,"title":{},"body":{"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{}}}],["species/species.module.js",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["speciesmodule",{"_index":15,"title":{"modules/SpeciesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpeciesModule.html":{},"modules.html":{},"overview.html":{}}}],["speciesresolver",{"_index":425,"title":{"classes/SpeciesResolver.html":{}},"body":{"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"coverage.html":{}}}],["speciesschema",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["speciesservice",{"_index":423,"title":{"injectables/SpeciesService.html":{}},"body":{"modules/SpeciesModule.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"coverage.html":{},"overview.html":{}}}],["split(/\\s",{"_index":316,"title":{},"body":{"injectables/FilmsService.html":{}}}],["src/.../common.ts",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../films.ts",{"_index":658,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":616,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../index.ts",{"_index":661,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../people.ts",{"_index":659,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../planets.ts",{"_index":660,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../species.ts",{"_index":662,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../starships.ts",{"_index":663,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../vehicles.ts",{"_index":664,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["src/films/films.module.ts",{"_index":178,"title":{},"body":{"modules/FilmsModule.html":{}}}],["src/films/films.resolver.ts",{"_index":184,"title":{},"body":{"classes/FilmsResolver.html":{},"coverage.html":{}}}],["src/films/films.resolver.ts:10",{"_index":204,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["src/films/films.resolver.ts:18",{"_index":210,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["src/films/films.resolver.ts:47",{"_index":209,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["src/films/films.resolver.ts:6",{"_index":193,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["src/films/films.resolver.ts:8",{"_index":200,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["src/films/films.service.ts",{"_index":246,"title":{},"body":{"injectables/FilmsService.html":{},"coverage.html":{}}}],["src/films/films.service.ts:10",{"_index":261,"title":{},"body":{"injectables/FilmsService.html":{}}}],["src/films/films.service.ts:12",{"_index":257,"title":{},"body":{"injectables/FilmsService.html":{}}}],["src/films/films.service.ts:43",{"_index":255,"title":{},"body":{"injectables/FilmsService.html":{}}}],["src/films/films.service.ts:73",{"_index":258,"title":{},"body":{"injectables/FilmsService.html":{}}}],["src/films/films.service.ts:8",{"_index":252,"title":{},"body":{"injectables/FilmsService.html":{}}}],["src/films/films.service.ts:84",{"_index":259,"title":{},"body":{"injectables/FilmsService.html":{}}}],["src/generated/graphql.ts",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/generated/graphql.ts:35",{"_index":344,"title":{},"body":{"interfaces/IQuery.html":{}}}],["src/generated/graphql.ts:36",{"_index":349,"title":{},"body":{"interfaces/IQuery.html":{}}}],["src/generated/graphql.ts:37",{"_index":345,"title":{},"body":{"interfaces/IQuery.html":{}}}],["src/generated/graphql.ts:38",{"_index":346,"title":{},"body":{"interfaces/IQuery.html":{}}}],["src/generated/graphql.ts:39",{"_index":347,"title":{},"body":{"interfaces/IQuery.html":{}}}],["src/generated/graphql.ts:40",{"_index":348,"title":{},"body":{"interfaces/IQuery.html":{}}}],["src/generated/graphql.ts:41",{"_index":350,"title":{},"body":{"interfaces/IQuery.html":{}}}],["src/main.ts",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/common.ts",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/films.ts",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/people.ts",{"_index":572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/planets.ts",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/species.ts",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/starships.ts",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/vehicles.ts",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/people/people.module.ts",{"_index":354,"title":{},"body":{"modules/PeopleModule.html":{}}}],["src/people/people.service.ts",{"_index":356,"title":{},"body":{"injectables/PeopleService.html":{},"coverage.html":{}}}],["src/people/people.service.ts:10",{"_index":362,"title":{},"body":{"injectables/PeopleService.html":{}}}],["src/people/people.service.ts:25",{"_index":360,"title":{},"body":{"injectables/PeopleService.html":{}}}],["src/people/people.service.ts:7",{"_index":364,"title":{},"body":{"injectables/PeopleService.html":{}}}],["src/people/people.service.ts:8",{"_index":366,"title":{},"body":{"injectables/PeopleService.html":{}}}],["src/planets/planets.module.ts",{"_index":380,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["src/planets/planets.resolver.ts",{"_index":384,"title":{},"body":{"classes/PlanetsResolver.html":{},"coverage.html":{}}}],["src/planets/planets.resolver.ts:5",{"_index":386,"title":{},"body":{"classes/PlanetsResolver.html":{}}}],["src/planets/planets.resolver.ts:8",{"_index":387,"title":{},"body":{"classes/PlanetsResolver.html":{}}}],["src/planets/planets.service.ts",{"_index":392,"title":{},"body":{"injectables/PlanetsService.html":{},"coverage.html":{}}}],["src/planets/planets.service.ts:41",{"_index":393,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["src/planets/planets.service.ts:8",{"_index":396,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["src/planets/planets.service.ts:9",{"_index":394,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["src/species/species.module.ts",{"_index":424,"title":{},"body":{"modules/SpeciesModule.html":{}}}],["src/species/species.resolver.ts",{"_index":428,"title":{},"body":{"classes/SpeciesResolver.html":{},"coverage.html":{}}}],["src/species/species.resolver.ts:5",{"_index":430,"title":{},"body":{"classes/SpeciesResolver.html":{}}}],["src/species/species.resolver.ts:8",{"_index":431,"title":{},"body":{"classes/SpeciesResolver.html":{}}}],["src/species/species.service.ts",{"_index":435,"title":{},"body":{"injectables/SpeciesService.html":{},"coverage.html":{}}}],["src/species/species.service.ts:42",{"_index":436,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["src/species/species.service.ts:8",{"_index":439,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["src/species/species.service.ts:9",{"_index":437,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["src/starships/starships.module.ts",{"_index":466,"title":{},"body":{"modules/StarshipsModule.html":{}}}],["src/starships/starships.resolver.ts",{"_index":470,"title":{},"body":{"classes/StarshipsResolver.html":{},"coverage.html":{}}}],["src/starships/starships.resolver.ts:5",{"_index":472,"title":{},"body":{"classes/StarshipsResolver.html":{}}}],["src/starships/starships.resolver.ts:8",{"_index":473,"title":{},"body":{"classes/StarshipsResolver.html":{}}}],["src/starships/starships.service.ts",{"_index":477,"title":{},"body":{"injectables/StarshipsService.html":{},"coverage.html":{}}}],["src/starships/starships.service.ts:45",{"_index":478,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["src/starships/starships.service.ts:8",{"_index":481,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["src/starships/starships.service.ts:9",{"_index":479,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["src/swapischemas/films.ts",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/swapischemas/index.js",{"_index":266,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["src/swapischemas/index.ts",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/swapischemas/people.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/swapischemas/planets.ts",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/swapischemas/species.ts",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/swapischemas/starships.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/swapischemas/vehicles.ts",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/vehicles/vehicles.module.ts",{"_index":514,"title":{},"body":{"modules/VehiclesModule.html":{}}}],["src/vehicles/vehicles.resolver.ts",{"_index":518,"title":{},"body":{"classes/VehiclesResolver.html":{},"coverage.html":{}}}],["src/vehicles/vehicles.resolver.ts:5",{"_index":520,"title":{},"body":{"classes/VehiclesResolver.html":{}}}],["src/vehicles/vehicles.resolver.ts:8",{"_index":521,"title":{},"body":{"classes/VehiclesResolver.html":{}}}],["src/vehicles/vehicles.service.ts",{"_index":525,"title":{},"body":{"injectables/VehiclesService.html":{},"coverage.html":{}}}],["src/vehicles/vehicles.service.ts:43",{"_index":526,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:8",{"_index":529,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["src/vehicles/vehicles.service.ts:9",{"_index":527,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["standard",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["star",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["star\\r\\nsystems",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["starship_class",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["starshipclass",{"_index":171,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["starships",{"_index":119,"title":{"interfaces/Starships.html":{}},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["starships(@args('id",{"_index":474,"title":{},"body":{"classes/StarshipsResolver.html":{}}}],["starships(id",{"_index":136,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"interfaces/Vehicles.html":{}}}],["starships.resolver.js",{"_index":468,"title":{},"body":{"modules/StarshipsModule.html":{}}}],["starships.service.js",{"_index":469,"title":{},"body":{"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{}}}],["starships/starships.module.js",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["starshipsmodule",{"_index":16,"title":{"modules/StarshipsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StarshipsModule.html":{},"modules.html":{},"overview.html":{}}}],["starshipsresolver",{"_index":467,"title":{"classes/StarshipsResolver.html":{}},"body":{"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"coverage.html":{}}}],["starshipsschema",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["starshipsservice",{"_index":465,"title":{"injectables/StarshipsService.html":{}},"body":{"modules/StarshipsModule.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"coverage.html":{},"overview.html":{}}}],["start",{"_index":635,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":638,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":639,"title":{},"body":{"index.html":{}}}],["started",{"_index":623,"title":{"index.html":{}},"body":{}}],["starwars",{"_index":625,"title":{},"body":{"index.html":{}}}],["statements",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":270,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{},"miscellaneous/functions.html":{}}}],["statustext",{"_index":271,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["stopped",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string[]).push(name",{"_index":343,"title":{},"body":{"injectables/FilmsService.html":{}}}],["summary",{"_index":189,"title":{},"body":{"classes/FilmsResolver.html":{},"interfaces/IQuery.html":{}}}],["summary(@args('sort",{"_index":221,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["summary(sort",{"_index":132,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{}}}],["support",{"_index":644,"title":{},"body":{"modules.html":{}}}],["supreme",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface_water",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surfacewater",{"_index":147,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":645,"title":{},"body":{"modules.html":{}}}],["systems",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":173,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["tatooine",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taxation",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taxation\\r\\nof",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terrain",{"_index":148,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":642,"title":{},"body":{"index.html":{}}}],["tests",{"_index":640,"title":{},"body":{"index.html":{}}}],["the\\r\\ngalactic",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["the\\r\\ngalaxy",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["the\\r\\nrepublic",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.filmservice.findall(1",{"_index":220,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["this.filmservice.findone(episode_id",{"_index":219,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["this.filmservice.getdescriptions",{"_index":224,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["this.filmservice.getfrequency",{"_index":243,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["this.findall(1",{"_index":311,"title":{},"body":{"injectables/FilmsService.html":{}}}],["this.getalldata(`${process.env.base_url}/people",{"_index":374,"title":{},"body":{"injectables/PeopleService.html":{}}}],["this.getalldata(nexturl",{"_index":372,"title":{},"body":{"injectables/PeopleService.html":{}}}],["this.getdescriptions",{"_index":322,"title":{},"body":{"injectables/FilmsService.html":{}}}],["this.logger.debug(`request",{"_index":276,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["this.logger.error(`error",{"_index":369,"title":{},"body":{"injectables/PeopleService.html":{}}}],["this.peopleresults",{"_index":373,"title":{},"body":{"injectables/PeopleService.html":{}}}],["this.peopleresults.map(v",{"_index":375,"title":{},"body":{"injectables/PeopleService.html":{}}}],["this.peopleresults.push(...data.results",{"_index":370,"title":{},"body":{"injectables/PeopleService.html":{}}}],["this.peopleservice.findallnames",{"_index":324,"title":{},"body":{"injectables/FilmsService.html":{}}}],["this.planetsresolver.findall(page",{"_index":391,"title":{},"body":{"classes/PlanetsResolver.html":{}}}],["this.planetsresolver.findone(id",{"_index":390,"title":{},"body":{"classes/PlanetsResolver.html":{}}}],["this.speciesresolver.findall(page",{"_index":434,"title":{},"body":{"classes/SpeciesResolver.html":{}}}],["this.speciesresolver.findone(id",{"_index":433,"title":{},"body":{"classes/SpeciesResolver.html":{}}}],["this.starshipsresolver.findall(page",{"_index":476,"title":{},"body":{"classes/StarshipsResolver.html":{}}}],["this.starshipsresolver.findone(id",{"_index":475,"title":{},"body":{"classes/StarshipsResolver.html":{}}}],["this.vehiclesresolver.findall(page",{"_index":524,"title":{},"body":{"classes/VehiclesResolver.html":{}}}],["this.vehiclesresolver.findone(id",{"_index":523,"title":{},"body":{"classes/VehiclesResolver.html":{}}}],["title",{"_index":120,"title":{},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"miscellaneous/variables.html":{}}}],["tostring",{"_index":314,"title":{},"body":{"injectables/FilmsService.html":{}}}],["trade",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trade\\r\\nfederation",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformedfilms",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformedplanet",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformedspecies",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformedstarships",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformedvehicles",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["try",{"_index":268,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["ttl",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["turmoil",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":123,"title":{},"body":{"interfaces/Film.html":{},"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":656,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typepaths",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["undefined",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["unit",{"_index":641,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":208,"title":{},"body":{"classes/FilmsResolver.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["unlicensed",{"_index":654,"title":{},"body":{"properties.html":{}}}],["url",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"injectables/PeopleService.html":{},"interfaces/Planets.html":{},"injectables/PlanetsService.html":{},"interfaces/Species.html":{},"injectables/SpeciesService.html":{},"interfaces/Starships.html":{},"injectables/StarshipsService.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["urlresolver",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["useresponsecache",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["v",{"_index":318,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.average_height",{"_index":453,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.average_lifespan",{"_index":454,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.cargo_capacity",{"_index":498,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.characters",{"_index":298,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.classification",{"_index":455,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.climate",{"_index":416,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.consumables",{"_index":499,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.cost_in_credits",{"_index":500,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.created",{"_index":309,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.crew",{"_index":501,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.designation",{"_index":456,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.diameter",{"_index":411,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.director",{"_index":299,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.edited",{"_index":310,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.eye_colors",{"_index":457,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.films",{"_index":419,"title":{},"body":{"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.gravity",{"_index":414,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.hair_colors",{"_index":458,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.homeworld",{"_index":459,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.hyperdrive_rating",{"_index":502,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["v.language",{"_index":460,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.length",{"_index":510,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.manufacturer",{"_index":503,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.max_atmosphering_speed",{"_index":504,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.mglt",{"_index":506,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["v.model",{"_index":505,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.name",{"_index":376,"title":{},"body":{"injectables/PeopleService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.opening_crawl",{"_index":300,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.orbital_period",{"_index":413,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.passengers",{"_index":507,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.people",{"_index":461,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.pilots",{"_index":508,"title":{},"body":{"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.planets",{"_index":301,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.population",{"_index":415,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.producer",{"_index":302,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.release_date",{"_index":303,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.residents",{"_index":420,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.rotation_period",{"_index":412,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.skin_colors",{"_index":462,"title":{},"body":{"injectables/SpeciesService.html":{}}}],["v.species",{"_index":304,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.starship_class",{"_index":509,"title":{},"body":{"injectables/StarshipsService.html":{}}}],["v.starships",{"_index":305,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.surface_water",{"_index":418,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.terrain",{"_index":417,"title":{},"body":{"injectables/PlanetsService.html":{}}}],["v.title",{"_index":306,"title":{},"body":{"injectables/FilmsService.html":{}}}],["v.url",{"_index":308,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.url.split('/').filter(v",{"_index":296,"title":{},"body":{"injectables/FilmsService.html":{},"injectables/PlanetsService.html":{},"injectables/SpeciesService.html":{},"injectables/StarshipsService.html":{},"injectables/VehiclesService.html":{}}}],["v.vehicle_class",{"_index":534,"title":{},"body":{"injectables/VehiclesService.html":{}}}],["v.vehicles",{"_index":307,"title":{},"body":{"injectables/FilmsService.html":{}}}],["validator",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":198,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{},"injectables/PeopleService.html":{},"classes/PlanetsResolver.html":{},"injectables/PlanetsService.html":{},"classes/SpeciesResolver.html":{},"injectables/SpeciesService.html":{},"classes/StarshipsResolver.html":{},"injectables/StarshipsService.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":667,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehicle_class",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vehicleclass",{"_index":172,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"injectables/VehiclesService.html":{},"miscellaneous/variables.html":{}}}],["vehicles",{"_index":121,"title":{"interfaces/Vehicles.html":{}},"body":{"interfaces/Film.html":{},"injectables/FilmsService.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["vehicles(@args('id",{"_index":522,"title":{},"body":{"classes/VehiclesResolver.html":{}}}],["vehicles(id",{"_index":137,"title":{},"body":{"interfaces/Film.html":{},"interfaces/IQuery.html":{},"interfaces/Planets.html":{},"interfaces/Species.html":{},"interfaces/Starships.html":{},"interfaces/Vehicles.html":{},"classes/VehiclesResolver.html":{}}}],["vehicles.resolver.js",{"_index":516,"title":{},"body":{"modules/VehiclesModule.html":{}}}],["vehicles.service.js",{"_index":517,"title":{},"body":{"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{}}}],["vehicles/vehicles.module.js",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["vehiclesmodule",{"_index":17,"title":{"modules/VehiclesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VehiclesModule.html":{},"modules.html":{},"overview.html":{}}}],["vehiclesresolver",{"_index":515,"title":{"classes/VehiclesResolver.html":{}},"body":{"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"coverage.html":{}}}],["vehiclesschema",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vehiclesservice",{"_index":513,"title":{"injectables/VehiclesService.html":{}},"body":{"modules/VehiclesModule.html":{},"classes/VehiclesResolver.html":{},"injectables/VehiclesService.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":651,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":636,"title":{},"body":{"index.html":{}}}],["wheeled",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":227,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["word.tolowercase",{"_index":229,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["wordcounts",{"_index":225,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["words",{"_index":223,"title":{},"body":{"classes/FilmsResolver.html":{},"injectables/FilmsService.html":{}}}],["words.join",{"_index":326,"title":{},"body":{"injectables/FilmsService.html":{}}}],["words.reduce>((acc",{"_index":226,"title":{},"body":{"classes/FilmsResolver.html":{}}}],["wordsstring",{"_index":325,"title":{},"body":{"injectables/FilmsService.html":{}}}],["wordsstring.matchall(new",{"_index":334,"title":{},"body":{"injectables/FilmsService.html":{}}}],["x1f\\x7f\\s]/g",{"_index":336,"title":{},"body":{"injectables/FilmsService.html":{}}}],["year",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":206,"title":{},"body":{"classes/FilmsResolver.html":{},"interfaces/IQuery.html":{},"classes/PlanetsResolver.html":{},"classes/SpeciesResolver.html":{},"classes/StarshipsResolver.html":{},"classes/VehiclesResolver.html":{}}}],["yoga",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["yoga/nestjs",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["yoga/plugin",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["yogadriver",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["yogadriverconfig",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["z.array(z.string().url",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.coerce.date",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":665,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["z.object",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/FilmsModule.html":{},"modules/PeopleModule.html":{},"modules/PlanetsModule.html":{},"modules/SpeciesModule.html":{},"modules/StarshipsModule.html":{},"modules/VehiclesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nFilmsModule\n\nFilmsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFilmsModule->AppModule\n\n\n\n\n\nPeopleModule\n\nPeopleModule\n\nAppModule -->\n\nPeopleModule->AppModule\n\n\n\n\n\nPlanetsModule\n\nPlanetsModule\n\nAppModule -->\n\nPlanetsModule->AppModule\n\n\n\n\n\nSpeciesModule\n\nSpeciesModule\n\nAppModule -->\n\nSpeciesModule->AppModule\n\n\n\n\n\nStarshipsModule\n\nStarshipsModule\n\nAppModule -->\n\nStarshipsModule->AppModule\n\n\n\n\n\nVehiclesModule\n\nVehiclesModule\n\nAppModule -->\n\nVehiclesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            FilmsModule\n                        \n                        \n                            PeopleModule\n                        \n                        \n                            PlanetsModule\n                        \n                        \n                            SpeciesModule\n                        \n                        \n                            StarshipsModule\n                        \n                        \n                            VehiclesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'node:path'\nimport { createRedisCache } from '@envelop/response-cache-redis'\nimport { YogaDriver, YogaDriverConfig } from '@graphql-yoga/nestjs'\nimport { Cache, useResponseCache } from '@graphql-yoga/plugin-response-cache'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { DateResolver, DateTimeISOResolver, JSONResolver, URLResolver } from 'graphql-scalars'\nimport { Redis } from 'ioredis'\nimport { FilmsModule } from './films/films.module.js'\nimport { PeopleModule } from './people/people.module.js'\nimport { PlanetsModule } from './planets/planets.module.js'\nimport { SpeciesModule } from './species/species.module.js'\nimport { StarshipsModule } from './starships/starships.module.js'\nimport { VehiclesModule } from './vehicles/vehicles.module.js'\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    GraphQLModule.forRootAsync({\n      driver: YogaDriver,\n      useFactory: async (configService: ConfigService) => ({\n        landingPage: true,\n        plugins: [useResponseCache({\n          session: () => null,\n          cache: configService.get('NODE_ENVIRONMENT') === 'production'\n            ? createRedisCache({\n              redis: new Redis({\n                host: configService.get('REDIS_HOST'),\n                port: Number(configService.get('REDIS_PORT')),\n                password: configService.get('REDIS_PASSWORD')\n              })\n            }) as Cache\n            : undefined,\n          ttl: 1000 * 6379 * 60 * 24 // 24 Hours\n        })],\n        typePaths: ['./**/*.graphql'],\n        definitions: {\n          path: join(process.cwd(), 'src/generated/graphql.ts'),\n          customScalarTypeMapping: {\n            Date: 'Date | string',\n            DateTimeISO: 'Date | string',\n            URL: '_URL | string'\n          },\n          additionalHeader: 'import { URL as _URL } from \\'url\\''\n        },\n        resolvers: {\n          Date: DateResolver,\n          DateTimeISO: DateTimeISOResolver,\n          URL: URLResolver,\n          JSON: JSONResolver\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    FilmsModule,\n    PeopleModule,\n    SpeciesModule,\n    VehiclesModule,\n    StarshipsModule,\n    PlanetsModule\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Film.html":{"url":"interfaces/Film.html","title":"interface - Film","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Film\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/graphql.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            characters\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            director\n                                        \n                                \n                                \n                                        \n                                            edited\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            openingCrawl\n                                        \n                                \n                                \n                                        \n                                            planets\n                                        \n                                \n                                \n                                        \n                                            producer\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                                \n                                        \n                                            starships\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            vehicles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        characters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        characters:     Nullable[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         DateTimeISO\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DateTimeISO\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        director\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        director:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edited:         DateTimeISO\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DateTimeISO\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openingCrawl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        openingCrawl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        planets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        planets:     Nullable[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        producer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        producer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:     Nullable[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starships\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        starships:     Nullable[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicles:     Nullable[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Nullable[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { URL as _URL } from 'url'\n\nexport enum SortOrder {\n    ASC = \"ASC\",\n    DESC = \"DESC\"\n}\n\nexport interface Film {\n    id: string;\n    characters: Nullable[];\n    created: DateTimeISO;\n    director: string;\n    edited: DateTimeISO;\n    openingCrawl: string;\n    planets: Nullable[];\n    producer: string;\n    releaseDate: string;\n    species: Nullable[];\n    starships: Nullable[];\n    title: string;\n    url: URL;\n    vehicles: Nullable[];\n}\n\nexport interface IQuery {\n    films(id?: Nullable, page?: Nullable): Film[] | Promise;\n    summary(sort?: Nullable): JSON | Promise;\n    frequency(): JSON | Promise;\n    planets(id?: Nullable, page?: Nullable): Planets[] | Promise;\n    species(id?: Nullable, page?: Nullable): Species[] | Promise;\n    starships(id?: Nullable, page?: Nullable): Starships[] | Promise;\n    vehicles(id?: Nullable, page?: Nullable): Vehicles[] | Promise;\n}\n\nexport interface Planets {\n    id: string;\n    climate: string;\n    created: Date;\n    diameter: string;\n    edited: Date;\n    films: URL[];\n    gravity: string;\n    name: string;\n    orbitalPeriod: string;\n    population: string;\n    residents: URL[];\n    rotationPeriod: string;\n    surfaceWater: string;\n    terrain: string;\n    url: URL;\n}\n\nexport interface Species {\n    id: string;\n    averageHeight: string;\n    averageLifespan: string;\n    classification: string;\n    created: Date;\n    designation: string;\n    edited: Date;\n    eyeColors: string;\n    films: URL[];\n    hairColors: string;\n    homeworld: string;\n    language: string;\n    name: string;\n    people: URL[];\n    skinColors: string;\n    url: URL;\n}\n\nexport interface Starships {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    hyperdriveRating: string;\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    MGLT: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    starshipClass: string;\n    url: URL;\n}\n\nexport interface Vehicles {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    url: URL;\n    vehicleClass: string;\n}\n\nexport type DateTimeISO = Date | string;\nexport type URL = _URL | string;\nexport type JSON = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilmsModule.html":{"url":"modules/FilmsModule.html","title":"module - FilmsModule","body":"\n                   \n\n\n\n\n    Modules\n    FilmsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilmsModule\n\n\n\ncluster_FilmsModule_providers\n\n\n\n\nFilmsService\n\nFilmsService\n\n\n\nFilmsModule\n\nFilmsModule\n\nFilmsModule -->\n\nFilmsService->FilmsModule\n\n\n\n\n\nPeopleService\n\nPeopleService\n\nFilmsModule -->\n\nPeopleService->FilmsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/films/films.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilmsService\n                        \n                        \n                            PeopleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { PeopleService } from '../people/people.service.js'\nimport { FilmsResolver } from './films.resolver.js'\nimport { FilmsService } from './films.service.js'\n\n@Module({\n  providers: [FilmsService, FilmsResolver, PeopleService]\n})\nexport class FilmsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilmsResolver.html":{"url":"classes/FilmsResolver.html","title":"class - FilmsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilmsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/films/films.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                films\n                            \n                            \n                                    \n                                    Async\n                                frequency\n                            \n                            \n                                    \n                                    Async\n                                summary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filmService: FilmsService)\n                    \n                \n                        \n                            \n                                Defined in src/films/films.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FilmsResolver.name)\n                    \n                \n                    \n                        \n                                Defined in src/films/films.resolver.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        films\n                        \n                    \n                \n            \n            \n                \n                        \n                    films(episode_id?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n                    \n                        \n                            Defined in src/films/films.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                episode_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        frequency\n                        \n                    \n                \n            \n            \n                \n                        \n                    frequency()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n                    \n                        \n                            Defined in src/films/films.resolver.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        summary\n                        \n                    \n                \n            \n            \n                \n                        \n                    summary(sort?: \"ASC\" | \"DESC\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n                    \n                        \n                            Defined in src/films/films.resolver.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                        \"ASC\" | \"DESC\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common'\nimport { Args, Query, Resolver } from '@nestjs/graphql'\nimport { FilmsService } from './films.service.js'\n\n@Resolver('Films')\nexport class FilmsResolver {\n  constructor(private readonly filmService: FilmsService) { }\n  private readonly logger = new Logger(FilmsResolver.name)\n  @Query()\n  async films(@Args('episode_id') episode_id?: string) {\n    if (episode_id !== undefined) {\n      return [await this.filmService.findOne(episode_id)]\n    }\n    return this.filmService.findAll(1)\n  }\n\n  @Query()\n  async summary(@Args('sort') sort?: 'ASC' | 'DESC'): Promise> {\n    const words = await this.filmService.getDescriptions()\n\n    const wordCounts = words.reduce>((acc, word) => {\n      const lowerCaseWord = word.toLowerCase()\n      if (lowerCaseWord in acc) {\n        acc[lowerCaseWord] += 1\n      }\n      else {\n        acc[lowerCaseWord] = 1\n      }\n      return acc\n    }, {})\n\n    if (sort) {\n      const sortedWordCounts = Object.entries(wordCounts)\n        .sort(([_wordA, countA], [_wordB, countB]) => sort === 'ASC' ? countA - countB : countB - countA)\n        .reduce>((acc, [word, count]) => {\n          acc[word] = count\n          return acc\n        }, {})\n\n      return sortedWordCounts\n    }\n\n    return wordCounts\n  }\n\n  @Query()\n  async frequency(): Promise {\n    const result = await this.filmService.getFrequency()\n\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilmsService.html":{"url":"injectables/FilmsService.html","title":"injectable - FilmsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/films/films.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getDescriptions\n                            \n                            \n                                    Async\n                                getFrequency\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(peopleService: PeopleService)\n                    \n                \n                        \n                            \n                                Defined in src/films/films.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        peopleService\n                                                  \n                                                        \n                                                                        PeopleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/films/films.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/films/films.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescriptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/films/films.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFrequency\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFrequency()\n                \n            \n\n\n                    \n                        \n                            Defined in src/films/films.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FilmsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/films/films.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common'\nimport axios from 'axios'\nimport { APIFilms, APIResponse } from 'src/SWAPISchemas/index.js'\nimport { Film } from '../generated/graphql.js'\nimport { PeopleService } from '../people/people.service.js'\n\n@Injectable()\nexport class FilmsService {\n  constructor(private readonly peopleService: PeopleService) { }\n  private readonly logger = new Logger(FilmsService.name)\n\n  async findOne(id: string): Promise {\n    try {\n      const { data, status, statusText } = await axios.get(`${process.env.BASE_URL}/films/${id}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Film = {\n        id,\n        characters: data.characters,\n        director: data.director,\n        openingCrawl: data.opening_crawl,\n        planets: data.planets,\n        producer: data.producer,\n        releaseDate: data.release_date,\n        species: data.species,\n        starships: data.starships,\n        title: data.title,\n        vehicles: data.vehicles,\n        url: data.url,\n        created: data.created,\n        edited: data.edited\n      }\n\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  async findAll(page: number): Promise {\n    try {\n      const { data, status, statusText } = await axios.get>(`${process.env.BASE_URL}/films/?page=${page}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Film[] = data.results.map(v => ({\n        id: v.url.split('/').filter(v => !!Number(v))[0],\n        characters: v.characters,\n        director: v.director,\n        openingCrawl: v.opening_crawl,\n        planets: v.planets,\n        producer: v.producer,\n        releaseDate: v.release_date,\n        species: v.species,\n        starships: v.starships,\n        title: v.title,\n        vehicles: v.vehicles,\n        url: v.url,\n        created: v.created,\n        edited: v.edited\n      }))\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  async getDescriptions(): Promise {\n    const films = await this.findAll(1)\n    const words = films.flatMap(film => film.openingCrawl)\n      .toString()\n      .replace(/[,.]|'s/g, ' ')\n      .split(/\\s/)\n      .filter(v => v)\n\n    return words\n  }\n\n  async getFrequency(): Promise {\n    let mostMatches = 0\n    let currentMostName: string | string[] = ''\n    const words = await this.getDescriptions()\n    const names = await this.peopleService.findAllNames()\n\n    const wordsString = words.join('')\n\n    for (const name of names) {\n      // eslint-disable-next-line no-control-regex\n      const matches = wordsString.matchAll(new RegExp(name.replace(/[\\x00-\\x1F\\x7F\\s]/g, ''), 'g')).toArray()\n      const occurances = matches.length\n\n      if (occurances === 0) {\n        continue\n      }\n\n      if (occurances === mostMatches) {\n        const isArray = Array.isArray(currentMostName)\n        isArray ? (currentMostName as string[]).push(name) : currentMostName = [currentMostName as string, name]\n        continue\n      }\n\n      if (occurances > mostMatches) {\n        currentMostName = name\n        mostMatches = occurances\n      }\n    }\n\n    return currentMostName\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQuery.html":{"url":"interfaces/IQuery.html","title":"interface - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/graphql.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        films\n                                    \n                                \n                                \n                                    \n                                        frequency\n                                    \n                                \n                                \n                                    \n                                        planets\n                                    \n                                \n                                \n                                    \n                                        species\n                                    \n                                \n                                \n                                    \n                                        starships\n                                    \n                                \n                                \n                                    \n                                        summary\n                                    \n                                \n                                \n                                    \n                                        vehicles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        films\n                        \n                    \n                \n            \n            \n                \nfilms(id?: Nullable, page?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/generated/graphql.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequency\n                        \n                    \n                \n            \n            \n                \nfrequency()\n                \n            \n\n\n                    \n                        \n                            Defined in src/generated/graphql.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         JSON | Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        planets\n                        \n                    \n                \n            \n            \n                \nplanets(id?: Nullable, page?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/generated/graphql.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        species\n                        \n                    \n                \n            \n            \n                \nspecies(id?: Nullable, page?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/generated/graphql.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        starships\n                        \n                    \n                \n            \n            \n                \nstarships(id?: Nullable, page?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/generated/graphql.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        summary\n                        \n                    \n                \n            \n            \n                \nsummary(sort?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/generated/graphql.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         JSON | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vehicles\n                        \n                    \n                \n            \n            \n                \nvehicles(id?: Nullable, page?: Nullable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/generated/graphql.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            Nullable\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { URL as _URL } from 'url'\n\nexport enum SortOrder {\n    ASC = \"ASC\",\n    DESC = \"DESC\"\n}\n\nexport interface Film {\n    id: string;\n    characters: Nullable[];\n    created: DateTimeISO;\n    director: string;\n    edited: DateTimeISO;\n    openingCrawl: string;\n    planets: Nullable[];\n    producer: string;\n    releaseDate: string;\n    species: Nullable[];\n    starships: Nullable[];\n    title: string;\n    url: URL;\n    vehicles: Nullable[];\n}\n\nexport interface IQuery {\n    films(id?: Nullable, page?: Nullable): Film[] | Promise;\n    summary(sort?: Nullable): JSON | Promise;\n    frequency(): JSON | Promise;\n    planets(id?: Nullable, page?: Nullable): Planets[] | Promise;\n    species(id?: Nullable, page?: Nullable): Species[] | Promise;\n    starships(id?: Nullable, page?: Nullable): Starships[] | Promise;\n    vehicles(id?: Nullable, page?: Nullable): Vehicles[] | Promise;\n}\n\nexport interface Planets {\n    id: string;\n    climate: string;\n    created: Date;\n    diameter: string;\n    edited: Date;\n    films: URL[];\n    gravity: string;\n    name: string;\n    orbitalPeriod: string;\n    population: string;\n    residents: URL[];\n    rotationPeriod: string;\n    surfaceWater: string;\n    terrain: string;\n    url: URL;\n}\n\nexport interface Species {\n    id: string;\n    averageHeight: string;\n    averageLifespan: string;\n    classification: string;\n    created: Date;\n    designation: string;\n    edited: Date;\n    eyeColors: string;\n    films: URL[];\n    hairColors: string;\n    homeworld: string;\n    language: string;\n    name: string;\n    people: URL[];\n    skinColors: string;\n    url: URL;\n}\n\nexport interface Starships {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    hyperdriveRating: string;\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    MGLT: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    starshipClass: string;\n    url: URL;\n}\n\nexport interface Vehicles {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    url: URL;\n    vehicleClass: string;\n}\n\nexport type DateTimeISO = Date | string;\nexport type URL = _URL | string;\nexport type JSON = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PeopleModule.html":{"url":"modules/PeopleModule.html","title":"module - PeopleModule","body":"\n                   \n\n\n\n\n    Modules\n    PeopleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PeopleModule\n\n\n\ncluster_PeopleModule_providers\n\n\n\ncluster_PeopleModule_exports\n\n\n\n\nPeopleService \n\nPeopleService \n\n\n\nPeopleModule\n\nPeopleModule\n\nPeopleService  -->\n\nPeopleModule->PeopleService \n\n\n\n\n\nPeopleService\n\nPeopleService\n\nPeopleModule -->\n\nPeopleService->PeopleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/people/people.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PeopleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PeopleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { PeopleService } from './people.service.js'\n\n@Module({\n  providers: [PeopleService],\n  exports: [PeopleService]\n})\nexport class PeopleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PeopleService.html":{"url":"injectables/PeopleService.html","title":"injectable - PeopleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PeopleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/people/people.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                peopleResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllNames\n                            \n                            \n                                    Async\n                                getAllData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllNames\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllNames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/people/people.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllData(url: URL | string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/people/people.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            URL | string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PeopleService.name)\n                    \n                \n                    \n                        \n                                Defined in src/people/people.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        peopleResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         APIPPeople[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/people/people.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport axios from 'axios'\nimport { APIPPeople, APIResponse } from 'src/SWAPISchemas/index.js'\n\n@Injectable()\nexport class PeopleService {\n  private readonly logger = new Logger(PeopleService.name)\n  private peopleResults: APIPPeople[] = []\n\n  async getAllData(url: URL | string | null): Promise {\n    let nextUrl = url\n\n    const { status, statusText, data } = await axios.get>(String(url))\n    if (status !== 200) {\n      this.logger.error(`Error ${status}: ${statusText}`)\n    }\n    this.peopleResults.push(...data.results)\n    if (data.next === null) {\n      return\n    }\n    nextUrl = data.next\n    await this.getAllData(nextUrl)\n  }\n\n  async findAllNames(): Promise {\n    this.peopleResults = []\n\n    await this.getAllData(`${process.env.BASE_URL}/people/`)\n\n    return this.peopleResults.map(v => v.name)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Planets.html":{"url":"interfaces/Planets.html","title":"interface - Planets","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Planets\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/graphql.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            climate\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            diameter\n                                        \n                                \n                                \n                                        \n                                            edited\n                                        \n                                \n                                \n                                        \n                                            films\n                                        \n                                \n                                \n                                        \n                                            gravity\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            orbitalPeriod\n                                        \n                                \n                                \n                                        \n                                            population\n                                        \n                                \n                                \n                                        \n                                            residents\n                                        \n                                \n                                \n                                        \n                                            rotationPeriod\n                                        \n                                \n                                \n                                        \n                                            surfaceWater\n                                        \n                                \n                                \n                                        \n                                            terrain\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        climate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        climate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diameter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diameter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edited:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        films\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        films:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gravity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gravity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitalPeriod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitalPeriod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        population\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        population:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        residents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        residents:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationPeriod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationPeriod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surfaceWater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surfaceWater:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        terrain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        terrain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { URL as _URL } from 'url'\n\nexport enum SortOrder {\n    ASC = \"ASC\",\n    DESC = \"DESC\"\n}\n\nexport interface Film {\n    id: string;\n    characters: Nullable[];\n    created: DateTimeISO;\n    director: string;\n    edited: DateTimeISO;\n    openingCrawl: string;\n    planets: Nullable[];\n    producer: string;\n    releaseDate: string;\n    species: Nullable[];\n    starships: Nullable[];\n    title: string;\n    url: URL;\n    vehicles: Nullable[];\n}\n\nexport interface IQuery {\n    films(id?: Nullable, page?: Nullable): Film[] | Promise;\n    summary(sort?: Nullable): JSON | Promise;\n    frequency(): JSON | Promise;\n    planets(id?: Nullable, page?: Nullable): Planets[] | Promise;\n    species(id?: Nullable, page?: Nullable): Species[] | Promise;\n    starships(id?: Nullable, page?: Nullable): Starships[] | Promise;\n    vehicles(id?: Nullable, page?: Nullable): Vehicles[] | Promise;\n}\n\nexport interface Planets {\n    id: string;\n    climate: string;\n    created: Date;\n    diameter: string;\n    edited: Date;\n    films: URL[];\n    gravity: string;\n    name: string;\n    orbitalPeriod: string;\n    population: string;\n    residents: URL[];\n    rotationPeriod: string;\n    surfaceWater: string;\n    terrain: string;\n    url: URL;\n}\n\nexport interface Species {\n    id: string;\n    averageHeight: string;\n    averageLifespan: string;\n    classification: string;\n    created: Date;\n    designation: string;\n    edited: Date;\n    eyeColors: string;\n    films: URL[];\n    hairColors: string;\n    homeworld: string;\n    language: string;\n    name: string;\n    people: URL[];\n    skinColors: string;\n    url: URL;\n}\n\nexport interface Starships {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    hyperdriveRating: string;\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    MGLT: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    starshipClass: string;\n    url: URL;\n}\n\nexport interface Vehicles {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    url: URL;\n    vehicleClass: string;\n}\n\nexport type DateTimeISO = Date | string;\nexport type URL = _URL | string;\nexport type JSON = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlanetsModule.html":{"url":"modules/PlanetsModule.html","title":"module - PlanetsModule","body":"\n                   \n\n\n\n\n    Modules\n    PlanetsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlanetsModule\n\n\n\ncluster_PlanetsModule_providers\n\n\n\n\nPlanetsService\n\nPlanetsService\n\n\n\nPlanetsModule\n\nPlanetsModule\n\nPlanetsModule -->\n\nPlanetsService->PlanetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/planets/planets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlanetsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { PlanetsResolver } from './planets.resolver.js'\nimport { PlanetsService } from './planets.service.js'\n\n@Module({\n  providers: [PlanetsResolver, PlanetsService]\n})\nexport class PlanetsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanetsResolver.html":{"url":"classes/PlanetsResolver.html","title":"class - PlanetsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanetsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/planets.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                planets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(planetsResolver: PlanetsService)\n                    \n                \n                        \n                            \n                                Defined in src/planets/planets.resolver.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        planetsResolver\n                                                  \n                                                        \n                                                                        PlanetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        planets\n                        \n                    \n                \n            \n            \n                \n                        \n                    planets(id?: string, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n                    \n                        \n                            Defined in src/planets/planets.resolver.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, Resolver } from '@nestjs/graphql'\nimport { PlanetsService } from './planets.service.js'\n\n@Resolver()\nexport class PlanetsResolver {\n  constructor(private readonly planetsResolver: PlanetsService) { }\n  @Query()\n  async planets(@Args('id') id?: string, @Args('page') page = 1) {\n    if (id !== undefined) {\n      return [await this.planetsResolver.findOne(id)]\n    }\n    return this.planetsResolver.findAll(page)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlanetsService.html":{"url":"injectables/PlanetsService.html","title":"injectable - PlanetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlanetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/planets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/planets/planets.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/planets/planets.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PlanetsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/planets/planets.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common'\nimport axios from 'axios'\nimport { APIPlanets, APIResponse } from 'src/SWAPISchemas/index.js'\nimport { Planets } from '../generated/graphql.js'\n\n@Injectable()\nexport class PlanetsService {\n  private readonly logger = new Logger(PlanetsService.name)\n  async findOne(id: string): Promise {\n    try {\n      const { data, status, statusText } = await axios.get(`${process.env.BASE_URL}/planets/${id}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Planets = {\n        id,\n        name: data.name,\n        diameter: data.diameter,\n        rotationPeriod: data.rotation_period,\n        orbitalPeriod: data.orbital_period,\n        gravity: data.gravity,\n        population: data.population,\n        climate: data.climate,\n        terrain: data.terrain,\n        surfaceWater: data.surface_water,\n        url: data.url,\n        created: data.created,\n        edited: data.edited,\n        films: data.films,\n        residents: data.residents\n      }\n\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  async findAll(page: number): Promise {\n    try {\n      const { data, status, statusText } = await axios.get>(`${process.env.BASE_URL}/planets/?page=${page}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Planets[] = data.results.map(v => ({\n        id: v.url.split('/').filter(v => !!Number(v))[0],\n        name: v.name,\n        diameter: v.diameter,\n        rotationPeriod: v.rotation_period,\n        orbitalPeriod: v.orbital_period,\n        gravity: v.gravity,\n        population: v.population,\n        climate: v.climate,\n        terrain: v.terrain,\n        surfaceWater: v.surface_water,\n        url: v.url,\n        created: v.created,\n        edited: v.edited,\n        films: v.films,\n        residents: v.residents\n      }))\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Species.html":{"url":"interfaces/Species.html","title":"interface - Species","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Species\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/graphql.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            averageHeight\n                                        \n                                \n                                \n                                        \n                                            averageLifespan\n                                        \n                                \n                                \n                                        \n                                            classification\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            designation\n                                        \n                                \n                                \n                                        \n                                            edited\n                                        \n                                \n                                \n                                        \n                                            eyeColors\n                                        \n                                \n                                \n                                        \n                                            films\n                                        \n                                \n                                \n                                        \n                                            hairColors\n                                        \n                                \n                                \n                                        \n                                            homeworld\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            people\n                                        \n                                \n                                \n                                        \n                                            skinColors\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        averageHeight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        averageLifespan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        averageLifespan:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        designation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        designation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edited:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eyeColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eyeColors:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        films\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        films:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hairColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hairColors:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeworld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeworld:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        people\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        people:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skinColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skinColors:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { URL as _URL } from 'url'\n\nexport enum SortOrder {\n    ASC = \"ASC\",\n    DESC = \"DESC\"\n}\n\nexport interface Film {\n    id: string;\n    characters: Nullable[];\n    created: DateTimeISO;\n    director: string;\n    edited: DateTimeISO;\n    openingCrawl: string;\n    planets: Nullable[];\n    producer: string;\n    releaseDate: string;\n    species: Nullable[];\n    starships: Nullable[];\n    title: string;\n    url: URL;\n    vehicles: Nullable[];\n}\n\nexport interface IQuery {\n    films(id?: Nullable, page?: Nullable): Film[] | Promise;\n    summary(sort?: Nullable): JSON | Promise;\n    frequency(): JSON | Promise;\n    planets(id?: Nullable, page?: Nullable): Planets[] | Promise;\n    species(id?: Nullable, page?: Nullable): Species[] | Promise;\n    starships(id?: Nullable, page?: Nullable): Starships[] | Promise;\n    vehicles(id?: Nullable, page?: Nullable): Vehicles[] | Promise;\n}\n\nexport interface Planets {\n    id: string;\n    climate: string;\n    created: Date;\n    diameter: string;\n    edited: Date;\n    films: URL[];\n    gravity: string;\n    name: string;\n    orbitalPeriod: string;\n    population: string;\n    residents: URL[];\n    rotationPeriod: string;\n    surfaceWater: string;\n    terrain: string;\n    url: URL;\n}\n\nexport interface Species {\n    id: string;\n    averageHeight: string;\n    averageLifespan: string;\n    classification: string;\n    created: Date;\n    designation: string;\n    edited: Date;\n    eyeColors: string;\n    films: URL[];\n    hairColors: string;\n    homeworld: string;\n    language: string;\n    name: string;\n    people: URL[];\n    skinColors: string;\n    url: URL;\n}\n\nexport interface Starships {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    hyperdriveRating: string;\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    MGLT: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    starshipClass: string;\n    url: URL;\n}\n\nexport interface Vehicles {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    url: URL;\n    vehicleClass: string;\n}\n\nexport type DateTimeISO = Date | string;\nexport type URL = _URL | string;\nexport type JSON = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpeciesModule.html":{"url":"modules/SpeciesModule.html","title":"module - SpeciesModule","body":"\n                   \n\n\n\n\n    Modules\n    SpeciesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpeciesModule\n\n\n\ncluster_SpeciesModule_providers\n\n\n\n\nSpeciesService\n\nSpeciesService\n\n\n\nSpeciesModule\n\nSpeciesModule\n\nSpeciesModule -->\n\nSpeciesService->SpeciesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/species/species.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SpeciesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { SpeciesResolver } from './species.resolver.js'\nimport { SpeciesService } from './species.service.js'\n\n@Module({\n  providers: [SpeciesResolver, SpeciesService]\n})\nexport class SpeciesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpeciesResolver.html":{"url":"classes/SpeciesResolver.html","title":"class - SpeciesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpeciesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/species/species.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                species\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(speciesResolver: SpeciesService)\n                    \n                \n                        \n                            \n                                Defined in src/species/species.resolver.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        speciesResolver\n                                                  \n                                                        \n                                                                        SpeciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        species\n                        \n                    \n                \n            \n            \n                \n                        \n                    species(id?: string, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n                    \n                        \n                            Defined in src/species/species.resolver.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, Resolver } from '@nestjs/graphql'\nimport { SpeciesService } from './species.service.js'\n\n@Resolver()\nexport class SpeciesResolver {\n  constructor(private readonly speciesResolver: SpeciesService) { }\n  @Query()\n  async species(@Args('id') id?: string, @Args('page') page = 1) {\n    if (id !== undefined) {\n      return [await this.speciesResolver.findOne(id)]\n    }\n    return this.speciesResolver.findAll(page)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpeciesService.html":{"url":"injectables/SpeciesService.html","title":"injectable - SpeciesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpeciesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/species/species.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/species/species.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/species/species.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SpeciesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/species/species.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common'\nimport axios from 'axios'\nimport { APIResponse, APISpecies } from 'src/SWAPISchemas/index.js'\nimport { Species } from '../generated/graphql.js'\n\n@Injectable()\nexport class SpeciesService {\n  private readonly logger = new Logger(SpeciesService.name)\n  async findOne(id: string): Promise {\n    try {\n      const { data, status, statusText } = await axios.get(`${process.env.BASE_URL}/species/${id}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Species = {\n        id,\n        name: data.name,\n        averageHeight: data.average_height,\n        averageLifespan: data.average_lifespan,\n        classification: data.classification,\n        designation: data.designation,\n        eyeColors: data.eye_colors,\n        hairColors: data.hair_colors,\n        homeworld: data.homeworld,\n        language: data.language,\n        people: data.people,\n        skinColors: data.skin_colors,\n        url: data.url,\n        created: data.created,\n        edited: data.edited,\n        films: data.films\n      }\n\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  async findAll(page: number): Promise {\n    try {\n      const { data, status, statusText } = await axios.get>(`${process.env.BASE_URL}/species/?page=${page}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Species[] = data.results.map(v => ({\n        id: v.url.split('/').filter(v => !!Number(v))[0],\n        name: v.name,\n        averageHeight: v.average_height,\n        averageLifespan: v.average_lifespan,\n        classification: v.classification,\n        designation: v.designation,\n        eyeColors: v.eye_colors,\n        hairColors: v.hair_colors,\n        homeworld: v.homeworld,\n        language: v.language,\n        people: v.people,\n        skinColors: v.skin_colors,\n        url: v.url,\n        created: v.created,\n        edited: v.edited,\n        films: v.films\n      }))\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Starships.html":{"url":"interfaces/Starships.html","title":"interface - Starships","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Starships\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/graphql.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cargoCapacity\n                                        \n                                \n                                \n                                        \n                                            consumables\n                                        \n                                \n                                \n                                        \n                                            costInCredits\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            crew\n                                        \n                                \n                                \n                                        \n                                            edited\n                                        \n                                \n                                \n                                        \n                                            films\n                                        \n                                \n                                \n                                        \n                                            hyperdriveRating\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            length\n                                        \n                                \n                                \n                                        \n                                            manufacturer\n                                        \n                                \n                                \n                                        \n                                            maxAtmospheringSpeed\n                                        \n                                \n                                \n                                        \n                                            MGLT\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            passengers\n                                        \n                                \n                                \n                                        \n                                            pilots\n                                        \n                                \n                                \n                                        \n                                            starshipClass\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cargoCapacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cargoCapacity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        consumables\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        consumables:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        costInCredits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        costInCredits:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crew:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edited:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        films\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        films:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hyperdriveRating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hyperdriveRating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        length:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtmospheringSpeed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtmospheringSpeed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MGLT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MGLT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passengers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passengers:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pilots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pilots:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starshipClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        starshipClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { URL as _URL } from 'url'\n\nexport enum SortOrder {\n    ASC = \"ASC\",\n    DESC = \"DESC\"\n}\n\nexport interface Film {\n    id: string;\n    characters: Nullable[];\n    created: DateTimeISO;\n    director: string;\n    edited: DateTimeISO;\n    openingCrawl: string;\n    planets: Nullable[];\n    producer: string;\n    releaseDate: string;\n    species: Nullable[];\n    starships: Nullable[];\n    title: string;\n    url: URL;\n    vehicles: Nullable[];\n}\n\nexport interface IQuery {\n    films(id?: Nullable, page?: Nullable): Film[] | Promise;\n    summary(sort?: Nullable): JSON | Promise;\n    frequency(): JSON | Promise;\n    planets(id?: Nullable, page?: Nullable): Planets[] | Promise;\n    species(id?: Nullable, page?: Nullable): Species[] | Promise;\n    starships(id?: Nullable, page?: Nullable): Starships[] | Promise;\n    vehicles(id?: Nullable, page?: Nullable): Vehicles[] | Promise;\n}\n\nexport interface Planets {\n    id: string;\n    climate: string;\n    created: Date;\n    diameter: string;\n    edited: Date;\n    films: URL[];\n    gravity: string;\n    name: string;\n    orbitalPeriod: string;\n    population: string;\n    residents: URL[];\n    rotationPeriod: string;\n    surfaceWater: string;\n    terrain: string;\n    url: URL;\n}\n\nexport interface Species {\n    id: string;\n    averageHeight: string;\n    averageLifespan: string;\n    classification: string;\n    created: Date;\n    designation: string;\n    edited: Date;\n    eyeColors: string;\n    films: URL[];\n    hairColors: string;\n    homeworld: string;\n    language: string;\n    name: string;\n    people: URL[];\n    skinColors: string;\n    url: URL;\n}\n\nexport interface Starships {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    hyperdriveRating: string;\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    MGLT: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    starshipClass: string;\n    url: URL;\n}\n\nexport interface Vehicles {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    url: URL;\n    vehicleClass: string;\n}\n\nexport type DateTimeISO = Date | string;\nexport type URL = _URL | string;\nexport type JSON = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StarshipsModule.html":{"url":"modules/StarshipsModule.html","title":"module - StarshipsModule","body":"\n                   \n\n\n\n\n    Modules\n    StarshipsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StarshipsModule\n\n\n\ncluster_StarshipsModule_providers\n\n\n\n\nStarshipsService\n\nStarshipsService\n\n\n\nStarshipsModule\n\nStarshipsModule\n\nStarshipsModule -->\n\nStarshipsService->StarshipsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/starships/starships.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StarshipsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { StarshipsResolver } from './starships.resolver.js'\nimport { StarshipsService } from './starships.service.js'\n\n@Module({\n  providers: [StarshipsResolver, StarshipsService]\n})\nexport class StarshipsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StarshipsResolver.html":{"url":"classes/StarshipsResolver.html","title":"class - StarshipsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StarshipsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starships/starships.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                starships\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(starshipsResolver: StarshipsService)\n                    \n                \n                        \n                            \n                                Defined in src/starships/starships.resolver.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        starshipsResolver\n                                                  \n                                                        \n                                                                        StarshipsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        starships\n                        \n                    \n                \n            \n            \n                \n                        \n                    starships(id?: string, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n                    \n                        \n                            Defined in src/starships/starships.resolver.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, Resolver } from '@nestjs/graphql'\nimport { StarshipsService } from './starships.service.js'\n\n@Resolver()\nexport class StarshipsResolver {\n  constructor(private readonly starshipsResolver: StarshipsService) { }\n  @Query()\n  async starships(@Args('id') id?: string, @Args('page') page = 1) {\n    if (id !== undefined) {\n      return [await this.starshipsResolver.findOne(id)]\n    }\n    return this.starshipsResolver.findAll(page)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StarshipsService.html":{"url":"injectables/StarshipsService.html","title":"injectable - StarshipsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StarshipsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starships/starships.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/starships/starships.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/starships/starships.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(StarshipsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/starships/starships.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common'\nimport axios from 'axios'\nimport { APIResponse, APIStarships } from 'src/SWAPISchemas/index.js'\nimport { Starships } from '../generated/graphql.js'\n\n@Injectable()\nexport class StarshipsService {\n  private readonly logger = new Logger(StarshipsService.name)\n  async findOne(id: string): Promise {\n    try {\n      const { data, status, statusText } = await axios.get(`${process.env.BASE_URL}/starships/${id}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Starships = {\n        id,\n        cargoCapacity: data.cargo_capacity,\n        consumables: data.consumables,\n        costInCredits: data.cost_in_credits,\n        crew: data.crew,\n        hyperdriveRating: data.hyperdrive_rating,\n        manufacturer: data.manufacturer,\n        maxAtmospheringSpeed: data.max_atmosphering_speed,\n        model: data.model,\n        MGLT: data.MGLT,\n        passengers: data.passengers,\n        pilots: data.pilots,\n        starshipClass: data.starship_class,\n        length: data.length,\n        name: data.name,\n        url: data.url,\n        created: data.created,\n        edited: data.edited,\n        films: data.films\n      }\n\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  async findAll(page: number): Promise {\n    try {\n      const { data, status, statusText } = await axios.get>(`${process.env.BASE_URL}/starships/?page=${page}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Starships[] = data.results.map(v => ({\n        id: v.url.split('/').filter(v => !!Number(v))[0],\n        cargoCapacity: v.cargo_capacity,\n        consumables: v.consumables,\n        costInCredits: v.cost_in_credits,\n        crew: v.crew,\n        hyperdriveRating: v.hyperdrive_rating,\n        manufacturer: v.manufacturer,\n        maxAtmospheringSpeed: v.max_atmosphering_speed,\n        model: v.model,\n        MGLT: v.MGLT,\n        passengers: v.passengers,\n        pilots: v.pilots,\n        starshipClass: v.starship_class,\n        length: v.length,\n        name: v.name,\n        url: v.url,\n        created: v.created,\n        edited: v.edited,\n        films: v.films\n      }))\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vehicles.html":{"url":"interfaces/Vehicles.html","title":"interface - Vehicles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vehicles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/graphql.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cargoCapacity\n                                        \n                                \n                                \n                                        \n                                            consumables\n                                        \n                                \n                                \n                                        \n                                            costInCredits\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            crew\n                                        \n                                \n                                \n                                        \n                                            edited\n                                        \n                                \n                                \n                                        \n                                            films\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            length\n                                        \n                                \n                                \n                                        \n                                            manufacturer\n                                        \n                                \n                                \n                                        \n                                            maxAtmospheringSpeed\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            passengers\n                                        \n                                \n                                \n                                        \n                                            pilots\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            vehicleClass\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cargoCapacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cargoCapacity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        consumables\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        consumables:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        costInCredits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        costInCredits:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crew:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edited:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        films\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        films:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        length:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtmospheringSpeed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtmospheringSpeed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passengers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passengers:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pilots\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pilots:         URL[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         URL\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicleClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicleClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { URL as _URL } from 'url'\n\nexport enum SortOrder {\n    ASC = \"ASC\",\n    DESC = \"DESC\"\n}\n\nexport interface Film {\n    id: string;\n    characters: Nullable[];\n    created: DateTimeISO;\n    director: string;\n    edited: DateTimeISO;\n    openingCrawl: string;\n    planets: Nullable[];\n    producer: string;\n    releaseDate: string;\n    species: Nullable[];\n    starships: Nullable[];\n    title: string;\n    url: URL;\n    vehicles: Nullable[];\n}\n\nexport interface IQuery {\n    films(id?: Nullable, page?: Nullable): Film[] | Promise;\n    summary(sort?: Nullable): JSON | Promise;\n    frequency(): JSON | Promise;\n    planets(id?: Nullable, page?: Nullable): Planets[] | Promise;\n    species(id?: Nullable, page?: Nullable): Species[] | Promise;\n    starships(id?: Nullable, page?: Nullable): Starships[] | Promise;\n    vehicles(id?: Nullable, page?: Nullable): Vehicles[] | Promise;\n}\n\nexport interface Planets {\n    id: string;\n    climate: string;\n    created: Date;\n    diameter: string;\n    edited: Date;\n    films: URL[];\n    gravity: string;\n    name: string;\n    orbitalPeriod: string;\n    population: string;\n    residents: URL[];\n    rotationPeriod: string;\n    surfaceWater: string;\n    terrain: string;\n    url: URL;\n}\n\nexport interface Species {\n    id: string;\n    averageHeight: string;\n    averageLifespan: string;\n    classification: string;\n    created: Date;\n    designation: string;\n    edited: Date;\n    eyeColors: string;\n    films: URL[];\n    hairColors: string;\n    homeworld: string;\n    language: string;\n    name: string;\n    people: URL[];\n    skinColors: string;\n    url: URL;\n}\n\nexport interface Starships {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    hyperdriveRating: string;\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    MGLT: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    starshipClass: string;\n    url: URL;\n}\n\nexport interface Vehicles {\n    id: string;\n    cargoCapacity: string;\n    consumables: string;\n    costInCredits: string;\n    created: Date;\n    crew: string;\n    edited: Date;\n    films: URL[];\n    length: string;\n    manufacturer: string;\n    maxAtmospheringSpeed: string;\n    model: string;\n    name: string;\n    passengers: string;\n    pilots: URL[];\n    url: URL;\n    vehicleClass: string;\n}\n\nexport type DateTimeISO = Date | string;\nexport type URL = _URL | string;\nexport type JSON = any;\ntype Nullable = T | null;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VehiclesModule.html":{"url":"modules/VehiclesModule.html","title":"module - VehiclesModule","body":"\n                   \n\n\n\n\n    Modules\n    VehiclesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VehiclesModule\n\n\n\ncluster_VehiclesModule_providers\n\n\n\n\nVehiclesService\n\nVehiclesService\n\n\n\nVehiclesModule\n\nVehiclesModule\n\nVehiclesModule -->\n\nVehiclesService->VehiclesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vehicles/vehicles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VehiclesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { VehiclesResolver } from './vehicles.resolver.js'\nimport { VehiclesService } from './vehicles.service.js'\n\n@Module({\n  providers: [VehiclesResolver, VehiclesService]\n})\nexport class VehiclesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VehiclesResolver.html":{"url":"classes/VehiclesResolver.html","title":"class - VehiclesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VehiclesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/vehicles.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                vehicles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vehiclesResolver: VehiclesService)\n                    \n                \n                        \n                            \n                                Defined in src/vehicles/vehicles.resolver.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vehiclesResolver\n                                                  \n                                                        \n                                                                        VehiclesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        vehicles\n                        \n                    \n                \n            \n            \n                \n                        \n                    vehicles(id?: string, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n                    \n                        \n                            Defined in src/vehicles/vehicles.resolver.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, Resolver } from '@nestjs/graphql'\nimport { VehiclesService } from './vehicles.service.js'\n\n@Resolver()\nexport class VehiclesResolver {\n  constructor(private readonly vehiclesResolver: VehiclesService) { }\n  @Query()\n  async vehicles(@Args('id') id?: string, @Args('page') page = 1) {\n    if (id !== undefined) {\n      return [await this.vehiclesResolver.findOne(id)]\n    }\n    return this.vehiclesResolver.findAll(page)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VehiclesService.html":{"url":"injectables/VehiclesService.html","title":"injectable - VehiclesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VehiclesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vehicles/vehicles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vehicles/vehicles.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/vehicles/vehicles.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VehiclesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/vehicles/vehicles.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common'\nimport axios from 'axios'\nimport { APIResponse, APIVehicles } from 'src/SWAPISchemas/index.js'\nimport { Vehicles } from '../generated/graphql.js'\n\n@Injectable()\nexport class VehiclesService {\n  private readonly logger = new Logger(VehiclesService.name)\n  async findOne(id: string): Promise {\n    try {\n      const { data, status, statusText } = await axios.get(`${process.env.BASE_URL}/vehicles/${id}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Vehicles = {\n        id,\n        cargoCapacity: data.cargo_capacity,\n        consumables: data.consumables,\n        costInCredits: data.cost_in_credits,\n        crew: data.crew,\n        manufacturer: data.manufacturer,\n        maxAtmospheringSpeed: data.max_atmosphering_speed,\n        model: data.model,\n        passengers: data.passengers,\n        pilots: data.pilots,\n        vehicleClass: data.vehicle_class,\n        length: data.length,\n        name: data.name,\n        url: data.url,\n        created: data.created,\n        edited: data.edited,\n        films: data.films\n      }\n\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  async findAll(page: number): Promise {\n    try {\n      const { data, status, statusText } = await axios.get>(`${process.env.BASE_URL}/vehicles/?page=${page}`)\n      if (status !== 200) {\n        await Promise.reject(new HttpException(statusText, status))\n      }\n      this.logger.debug(`Request Status ${status}: ${statusText}`)\n      const results: Vehicles[] = data.results.map(v => ({\n        id: v.url.split('/').filter(v => !!Number(v))[0],\n        cargoCapacity: v.cargo_capacity,\n        consumables: v.consumables,\n        costInCredits: v.cost_in_credits,\n        crew: v.crew,\n        manufacturer: v.manufacturer,\n        maxAtmospheringSpeed: v.max_atmosphering_speed,\n        model: v.model,\n        passengers: v.passengers,\n        pilots: v.pilots,\n        vehicleClass: v.vehicle_class,\n        length: v.length,\n        name: v.name,\n        url: v.url,\n        created: v.created,\n        edited: v.edited,\n        films: v.films\n      }))\n      return await Promise.resolve(results)\n    }\n    catch (error) {\n      return Promise.reject(error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/SWAPISchemas/films.ts\n            \n            variable\n            FilmsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/films.ts\n            \n            type alias\n            Films\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/index.ts\n            \n            type alias\n            Response\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/people.ts\n            \n            variable\n            PeopleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/people.ts\n            \n            type alias\n            People\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/planets.ts\n            \n            variable\n            PlanetsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/planets.ts\n            \n            type alias\n            Planets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/species.ts\n            \n            variable\n            SpeciesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/species.ts\n            \n            type alias\n            Species\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/starships.ts\n            \n            variable\n            StarshipsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/starships.ts\n            \n            type alias\n            Starships\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/vehicles.ts\n            \n            variable\n            VehiclesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/SWAPISchemas/vehicles.ts\n            \n            type alias\n            Vehicles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/films/films.resolver.ts\n            \n            class\n            FilmsResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/films/films.service.ts\n            \n            injectable\n            FilmsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/graphql.ts\n            \n            interface\n            Film\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/generated/graphql.ts\n            \n            interface\n            IQuery\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/graphql.ts\n            \n            interface\n            Planets\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/generated/graphql.ts\n            \n            interface\n            Species\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/generated/graphql.ts\n            \n            interface\n            Starships\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/generated/graphql.ts\n            \n            interface\n            Vehicles\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/generated/graphql.ts\n            \n            type alias\n            DateTimeISO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/generated/graphql.ts\n            \n            type alias\n            JSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/generated/graphql.ts\n            \n            type alias\n            Nullable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/generated/graphql.ts\n            \n            type alias\n            URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/common.ts\n            \n            function\n            createRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/films.ts\n            \n            variable\n            correctRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/films.ts\n            \n            variable\n            descriptionWords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/films.ts\n            \n            variable\n            films\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/films.ts\n            \n            variable\n            incorrectRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/films.ts\n            \n            variable\n            transformedFilms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/people.ts\n            \n            variable\n            correctRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/people.ts\n            \n            variable\n            people\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/planets.ts\n            \n            variable\n            correctRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/planets.ts\n            \n            variable\n            incorrectRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/planets.ts\n            \n            variable\n            planet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/planets.ts\n            \n            variable\n            transformedPlanet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/species.ts\n            \n            variable\n            correctRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/species.ts\n            \n            variable\n            incorrectRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/species.ts\n            \n            variable\n            species\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/species.ts\n            \n            variable\n            transformedSpecies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/starships.ts\n            \n            variable\n            correctRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/starships.ts\n            \n            variable\n            incorrectRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/starships.ts\n            \n            variable\n            starships\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/starships.ts\n            \n            variable\n            transformedStarships\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/vehicles.ts\n            \n            variable\n            correctRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/vehicles.ts\n            \n            variable\n            incorrectRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/vehicles.ts\n            \n            variable\n            transformedVehicles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/mocks/vehicles.ts\n            \n            variable\n            vehicles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/people/people.service.ts\n            \n            injectable\n            PeopleService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/planets/planets.resolver.ts\n            \n            class\n            PlanetsResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/planets/planets.service.ts\n            \n            injectable\n            PlanetsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/species/species.resolver.ts\n            \n            class\n            SpeciesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/species/species.service.ts\n            \n            injectable\n            SpeciesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/starships/starships.resolver.ts\n            \n            class\n            StarshipsResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/starships/starships.service.ts\n            \n            injectable\n            StarshipsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/vehicles/vehicles.resolver.ts\n            \n            class\n            VehiclesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/vehicles/vehicles.service.ts\n            \n            injectable\n            VehiclesService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @envelop/response-cache-redis : ^4.1.2\n        \n            @graphql-yoga/nestjs : ^3.10.6\n        \n            @graphql-yoga/plugin-response-cache : ^3.12.6\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            axios : ^1.7.9\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            graphql : ^16.9.0\n        \n            graphql-scalars : ^1.24.0\n        \n            graphql-yoga : ^5.10.6\n        \n            ioredis : ^5.4.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            zod : ^3.24.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SortOrder   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generated/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createRequest   (src/.../common.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/mocks/common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRequest\n                        \n                    \n                \n            \n            \n                \ncreateRequest(data: T, status)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AxiosResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nStarWars API\nProject setup\nExample :$ pnpm installCompile, build and run the project\nExample :# build\n$ pnpm build\n\n# development\n$ pnpm start\n\n# watch mode\n$ pnpm start:dev\n\n# production mode\n$ pnpm start:prodRun tests\nExample :# unit tests\n$ pnpm test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilmsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PeopleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlanetsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpeciesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StarshipsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VehiclesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_FilmsModule\n\n\n\ncluster_FilmsModule_providers\n\n\n\ncluster_PeopleModule\n\n\n\ncluster_PeopleModule_exports\n\n\n\ncluster_PlanetsModule\n\n\n\ncluster_PlanetsModule_providers\n\n\n\ncluster_SpeciesModule\n\n\n\ncluster_SpeciesModule_providers\n\n\n\ncluster_StarshipsModule\n\n\n\ncluster_StarshipsModule_providers\n\n\n\ncluster_VehiclesModule\n\n\n\ncluster_VehiclesModule_providers\n\n\n\n\nFilmsModule\n\nFilmsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFilmsModule->AppModule\n\n\n\n\n\nPeopleModule\n\nPeopleModule\n\nAppModule -->\n\nPeopleModule->AppModule\n\n\n\n\n\nPeopleService \n\nPeopleService \n\nPeopleService  -->\n\nPeopleModule->PeopleService \n\n\n\n\n\nPlanetsModule\n\nPlanetsModule\n\nAppModule -->\n\nPlanetsModule->AppModule\n\n\n\n\n\nSpeciesModule\n\nSpeciesModule\n\nAppModule -->\n\nSpeciesModule->AppModule\n\n\n\n\n\nStarshipsModule\n\nStarshipsModule\n\nAppModule -->\n\nStarshipsModule->AppModule\n\n\n\n\n\nVehiclesModule\n\nVehiclesModule\n\nAppModule -->\n\nVehiclesModule->AppModule\n\n\n\n\n\nFilmsService\n\nFilmsService\n\nFilmsModule -->\n\nFilmsService->FilmsModule\n\n\n\n\n\nPeopleService\n\nPeopleService\n\nFilmsModule -->\n\nPeopleService->FilmsModule\n\n\n\nPeopleModule -->\n\nPeopleService->PeopleModule\n\n\n\n\n\nPlanetsService\n\nPlanetsService\n\nPlanetsModule -->\n\nPlanetsService->PlanetsModule\n\n\n\n\n\nSpeciesService\n\nSpeciesService\n\nSpeciesModule -->\n\nSpeciesService->SpeciesModule\n\n\n\n\n\nStarshipsService\n\nStarshipsService\n\nStarshipsModule -->\n\nStarshipsService->StarshipsModule\n\n\n\n\n\nVehiclesService\n\nVehiclesService\n\nVehiclesModule -->\n\nVehiclesService->VehiclesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateTimeISO   (src/.../graphql.ts)\n                        \n                        \n                            Films   (src/.../films.ts)\n                        \n                        \n                            JSON   (src/.../graphql.ts)\n                        \n                        \n                            Nullable   (src/.../graphql.ts)\n                        \n                        \n                            People   (src/.../people.ts)\n                        \n                        \n                            Planets   (src/.../planets.ts)\n                        \n                        \n                            Response   (src/.../index.ts)\n                        \n                        \n                            Species   (src/.../species.ts)\n                        \n                        \n                            Starships   (src/.../starships.ts)\n                        \n                        \n                            URL   (src/.../graphql.ts)\n                        \n                        \n                            Vehicles   (src/.../vehicles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/generated/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    DateTimeISO\n                \n            \n            \n                \n                        Date | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JSON\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    URL\n                \n            \n            \n                \n                            _URL | string\n\n                \n            \n        \n    \n    src/SWAPISchemas/films.ts\n    \n    \n        \n            \n                \n                    \n                    Films\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/SWAPISchemas/people.ts\n    \n    \n        \n            \n                \n                    \n                    People\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/SWAPISchemas/planets.ts\n    \n    \n        \n            \n                \n                    \n                    Planets\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/SWAPISchemas/index.ts\n    \n    \n        \n            \n                \n                    \n                    Response\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/SWAPISchemas/species.ts\n    \n    \n        \n            \n                \n                    \n                    Species\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/SWAPISchemas/starships.ts\n    \n    \n        \n            \n                \n                    \n                    Starships\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/SWAPISchemas/vehicles.ts\n    \n    \n        \n            \n                \n                    \n                    Vehicles\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            correctRequest   (src/.../films.ts)\n                        \n                        \n                            correctRequest   (src/.../people.ts)\n                        \n                        \n                            correctRequest   (src/.../planets.ts)\n                        \n                        \n                            correctRequest   (src/.../species.ts)\n                        \n                        \n                            correctRequest   (src/.../starships.ts)\n                        \n                        \n                            correctRequest   (src/.../vehicles.ts)\n                        \n                        \n                            descriptionWords   (src/.../films.ts)\n                        \n                        \n                            films   (src/.../films.ts)\n                        \n                        \n                            FilmsSchema   (src/.../films.ts)\n                        \n                        \n                            incorrectRequest   (src/.../films.ts)\n                        \n                        \n                            incorrectRequest   (src/.../planets.ts)\n                        \n                        \n                            incorrectRequest   (src/.../species.ts)\n                        \n                        \n                            incorrectRequest   (src/.../starships.ts)\n                        \n                        \n                            incorrectRequest   (src/.../vehicles.ts)\n                        \n                        \n                            people   (src/.../people.ts)\n                        \n                        \n                            PeopleSchema   (src/.../people.ts)\n                        \n                        \n                            planet   (src/.../planets.ts)\n                        \n                        \n                            PlanetsSchema   (src/.../planets.ts)\n                        \n                        \n                            species   (src/.../species.ts)\n                        \n                        \n                            SpeciesSchema   (src/.../species.ts)\n                        \n                        \n                            starships   (src/.../starships.ts)\n                        \n                        \n                            StarshipsSchema   (src/.../starships.ts)\n                        \n                        \n                            transformedFilms   (src/.../films.ts)\n                        \n                        \n                            transformedPlanet   (src/.../planets.ts)\n                        \n                        \n                            transformedSpecies   (src/.../species.ts)\n                        \n                        \n                            transformedStarships   (src/.../starships.ts)\n                        \n                        \n                            transformedVehicles   (src/.../vehicles.ts)\n                        \n                        \n                            vehicles   (src/.../vehicles.ts)\n                        \n                        \n                            VehiclesSchema   (src/.../vehicles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mocks/films.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        correctRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(films, 'correct')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionWords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  'Turmoil',\n  'has',\n  'engulfed',\n  'the',\n  'Galactic',\n  'Republic',\n  'The',\n  'taxation',\n  'of',\n  'trade',\n  'routes',\n  'to',\n  'outlying',\n  'star',\n  'systems',\n  'is',\n  'in',\n  'dispute',\n  'Hoping',\n  'to',\n  'resolve',\n  'the',\n  'matter',\n  'with',\n  'a',\n  'blockade',\n  'of',\n  'deadly',\n  'battleships',\n  'the',\n  'greedy',\n  'Trade',\n  'Federation',\n  'has',\n  'stopped',\n  'all',\n  'shipping',\n  'to',\n  'the',\n  'small',\n  'planet',\n  'of',\n  'Naboo',\n  'While',\n  'the',\n  'Congress',\n  'of',\n  'the',\n  'Republic',\n  'endlessly',\n  'debates',\n  'this',\n  'alarming',\n  'chain',\n  'of',\n  'events',\n  'the',\n  'Supreme',\n  'Chancellor',\n  'has',\n  'secretly',\n  'dispatched',\n  'two',\n  'Jedi',\n  'Knights',\n  'the',\n  'guardians',\n  'of',\n  'peace',\n  'and',\n  'justice',\n  'in',\n  'the',\n  'galaxy',\n  'to',\n  'settle',\n  'the',\n  'conflict'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        films\n                        \n                    \n                \n            \n                \n                    \n                        Type :         APIFilms\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'The Phantom Menace',\n  episode_id: '1',\n  opening_crawl: 'Turmoil has engulfed the\\r\\nGalactic Republic. The taxation\\r\\nof trade routes to outlying star\\r\\nsystems is in dispute.\\r\\n\\r\\nHoping to resolve the matter\\r\\nwith a blockade of deadly\\r\\nbattleships, the greedy Trade\\r\\nFederation has stopped all\\r\\nshipping to the small planet\\r\\nof Naboo.\\r\\n\\r\\nWhile the Congress of the\\r\\nRepublic endlessly debates\\r\\nthis alarming chain of events,\\r\\nthe Supreme Chancellor has\\r\\nsecretly dispatched two Jedi\\r\\nKnights, the guardians of\\r\\npeace and justice in the\\r\\ngalaxy, to settle the conflict....',\n  director: 'George Lucas',\n  producer: 'Rick McCallum',\n  release_date: '1999-05-19',\n  characters: [\n    'https://swapi.py4e.com/api/people/2/'\n  ],\n  planets: [\n    'https://swapi.py4e.com/api/planets/1/'\n  ],\n  starships: [\n    'https://swapi.py4e.com/api/starships/31/'\n  ],\n  vehicles: [\n    'https://swapi.py4e.com/api/vehicles/33/'\n  ],\n  species: [\n    'https://swapi.py4e.com/api/species/1/'\n  ],\n  created: new Date('2014-12-19T16:52:55.740000Z'),\n  edited: new Date('2014-12-20T10:54:07.216000Z'),\n  url: 'https://swapi.py4e.com/api/films/4/'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incorrectRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(films, 'incorrect')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformedFilms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Film\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '1',\n  title: 'The Phantom Menace',\n  openingCrawl: 'Turmoil has engulfed the\\r\\nGalactic Republic. The taxation\\r\\nof trade routes to outlying star\\r\\nsystems is in dispute.\\r\\n\\r\\nHoping to resolve the matter\\r\\nwith a blockade of deadly\\r\\nbattleships, the greedy Trade\\r\\nFederation has stopped all\\r\\nshipping to the small planet\\r\\nof Naboo.\\r\\n\\r\\nWhile the Congress of the\\r\\nRepublic endlessly debates\\r\\nthis alarming chain of events,\\r\\nthe Supreme Chancellor has\\r\\nsecretly dispatched two Jedi\\r\\nKnights, the guardians of\\r\\npeace and justice in the\\r\\ngalaxy, to settle the conflict....',\n  director: 'George Lucas',\n  producer: 'Rick McCallum',\n  releaseDate: '1999-05-19',\n  characters: [\n    'https://swapi.py4e.com/api/people/2/'\n  ],\n  planets: [\n    'https://swapi.py4e.com/api/planets/1/'\n  ],\n  starships: [\n    'https://swapi.py4e.com/api/starships/31/'\n  ],\n  vehicles: [\n    'https://swapi.py4e.com/api/vehicles/33/'\n  ],\n  species: [\n    'https://swapi.py4e.com/api/species/1/'\n  ],\n  created: new Date('2014-12-19T16:52:55.740000Z'),\n  edited: new Date('2014-12-20T10:54:07.216000Z'),\n  url: 'https://swapi.py4e.com/api/films/4/'\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/people.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        correctRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(people, 'correct')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        people\n                        \n                    \n                \n            \n                \n                    \n                        Type :         APIPPeople\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'Luke Skywalker',\n  height: '172',\n  mass: '77',\n  hair_color: 'blond',\n  skin_color: 'fair',\n  eye_color: 'blue',\n  birth_year: '19BBY',\n  gender: 'male',\n  homeworld: 'https://swapi.py4e.com/api/planets/1/',\n  films: [\n    'https://swapi.py4e.com/api/films/1/',\n    'https://swapi.py4e.com/api/films/2/',\n    'https://swapi.py4e.com/api/films/3/',\n    'https://swapi.py4e.com/api/films/6/',\n    'https://swapi.py4e.com/api/films/7/'\n  ],\n  species: [\n    'https://swapi.py4e.com/api/species/1/'\n  ],\n  vehicles: [\n    'https://swapi.py4e.com/api/vehicles/14/',\n    'https://swapi.py4e.com/api/vehicles/30/'\n  ],\n  starships: [\n    'https://swapi.py4e.com/api/starships/12/',\n    'https://swapi.py4e.com/api/starships/22/'\n  ],\n  created: new Date('2014-12-09T13:50:51.644000Z'),\n  edited: new Date('2014-12-20T21:17:56.891000Z'),\n  url: 'https://swapi.py4e.com/api/people/1/'\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/planets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        correctRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(planet, 'correct')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incorrectRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(planet, 'incorrect')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        planet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         APIPlanets\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'Tatooine',\n  rotation_period: '23',\n  orbital_period: '304',\n  diameter: '10465',\n  climate: 'arid',\n  gravity: '1 standard',\n  terrain: 'desert',\n  surface_water: '1',\n  population: '200000',\n  residents: [\n    'https://swapi.py4e.com/api/people/1/'\n  ],\n  films: [\n    'https://swapi.py4e.com/api/films/1/'\n  ],\n  created: new Date('2014-12-09T13:50:49.641000Z'),\n  edited: new Date('2014-12-20T20:58:18.411000Z'),\n  url: 'https://swapi.py4e.com/api/planets/1/'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformedPlanet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Planets\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '1',\n  name: 'Tatooine',\n  rotationPeriod: '23',\n  orbitalPeriod: '304',\n  diameter: '10465',\n  climate: 'arid',\n  gravity: '1 standard',\n  terrain: 'desert',\n  surfaceWater: '1',\n  population: '200000',\n  residents: [\n    'https://swapi.py4e.com/api/people/1/'\n  ],\n  films: [\n    'https://swapi.py4e.com/api/films/1/'\n  ],\n  created: new Date('2014-12-09T13:50:49.641000Z'),\n  edited: new Date('2014-12-20T20:58:18.411000Z'),\n  url: 'https://swapi.py4e.com/api/planets/1/'\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/species.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        correctRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(species, 'correct')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incorrectRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(species, 'incorrect')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        species\n                        \n                    \n                \n            \n                \n                    \n                        Type :         APISpecies\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'Human',\n  classification: 'mammal',\n  designation: 'sentient',\n  average_height: '180',\n  skin_colors: 'caucasian, black, asian, hispanic',\n  hair_colors: 'blonde, brown, black, red',\n  eye_colors: 'brown, blue, green, hazel, grey, amber',\n  average_lifespan: '120',\n  homeworld: 'https://swapi.py4e.com/api/planets/9/',\n  language: 'Galactic Basic',\n  people: [\n    'https://swapi.py4e.com/api/people/1/'\n  ],\n  films: [\n    'https://swapi.py4e.com/api/films/1/'\n  ],\n  created: new Date('2014-12-10T13:52:11.567000Z'),\n  edited: new Date('2014-12-20T21:36:42.136000Z'),\n  url: 'https://swapi.py4e.com/api/species/1/'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformedSpecies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Species\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '2',\n  name: 'Human',\n  classification: 'mammal',\n  designation: 'sentient',\n  averageHeight: '180',\n  skinColors: 'caucasian, black, asian, hispanic',\n  hairColors: 'blonde, brown, black, red',\n  eyeColors: 'brown, blue, green, hazel, grey, amber',\n  averageLifespan: '120',\n  homeworld: 'https://swapi.py4e.com/api/planets/9/',\n  language: 'Galactic Basic',\n  people: [\n    'https://swapi.py4e.com/api/people/1/'\n  ],\n  films: [\n    'https://swapi.py4e.com/api/films/1/'\n  ],\n  created: new Date('2014-12-10T13:52:11.567000Z'),\n  edited: new Date('2014-12-20T21:36:42.136000Z'),\n  url: 'https://swapi.py4e.com/api/species/1/'\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/starships.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        correctRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(starships, 'correct')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incorrectRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(starships, 'incorrect')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        starships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         APIStarships\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'CR90 corvette',\n  model: 'CR90 corvette',\n  manufacturer: 'Corellian Engineering Corporation',\n  cost_in_credits: '3500000',\n  length: '150',\n  max_atmosphering_speed: '950',\n  crew: '30-165',\n  passengers: '600',\n  cargo_capacity: '3000000',\n  consumables: '1 year',\n  hyperdrive_rating: '2.0',\n  MGLT: '60',\n  starship_class: 'corvette',\n  pilots: [],\n  films: [\n    'https://swapi.py4e.com/api/films/1/'\n  ],\n  created: new Date('2014-12-10T14:20:33.369000Z'),\n  edited: new Date('2014-12-20T21:23:49.867000Z'),\n  url: 'https://swapi.py4e.com/api/starships/2/'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformedStarships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Starships\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '2',\n  name: 'CR90 corvette',\n  model: 'CR90 corvette',\n  manufacturer: 'Corellian Engineering Corporation',\n  costInCredits: '3500000',\n  length: '150',\n  maxAtmospheringSpeed: '950',\n  crew: '30-165',\n  passengers: '600',\n  cargoCapacity: '3000000',\n  consumables: '1 year',\n  hyperdriveRating: '2.0',\n  MGLT: '60',\n  starshipClass: 'corvette',\n  pilots: [],\n  films: [\n    'https://swapi.py4e.com/api/films/1/'\n  ],\n  created: new Date('2014-12-10T14:20:33.369000Z'),\n  edited: new Date('2014-12-20T21:23:49.867000Z'),\n  url: 'https://swapi.py4e.com/api/starships/2/'\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/vehicles.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        correctRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(vehicles, 'correct')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incorrectRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createRequest(vehicles, 'incorrect')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformedVehicles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vehicles\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '2',\n  name: 'Sand Crawler',\n  model: 'Digger Crawler',\n  manufacturer: 'Corellia Mining Corporation',\n  costInCredits: '150000',\n  length: '36.8 ',\n  maxAtmospheringSpeed: '30',\n  crew: '46',\n  passengers: '30',\n  cargoCapacity: '50000',\n  consumables: '2 months',\n  vehicleClass: 'wheeled',\n  pilots: [],\n  films: [\n    'https://swapi.py4e.com/api/films/1/',\n    'https://swapi.py4e.com/api/films/5/'\n  ],\n  created: new Date('2014-12-10T15:36:25.724000Z'),\n  edited: new Date('2014-12-20T21:30:21.661000Z'),\n  url: 'https://swapi.py4e.com/api/vehicles/4/'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vehicles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         APIVehicles\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'Sand Crawler',\n  model: 'Digger Crawler',\n  manufacturer: 'Corellia Mining Corporation',\n  cost_in_credits: '150000',\n  length: '36.8 ',\n  max_atmosphering_speed: '30',\n  crew: '46',\n  passengers: '30',\n  cargo_capacity: '50000',\n  consumables: '2 months',\n  vehicle_class: 'wheeled',\n  pilots: [],\n  films: [\n    'https://swapi.py4e.com/api/films/1/',\n    'https://swapi.py4e.com/api/films/5/'\n  ],\n  created: new Date('2014-12-10T15:36:25.724000Z'),\n  edited: new Date('2014-12-20T21:30:21.661000Z'),\n  url: 'https://swapi.py4e.com/api/vehicles/4/'\n}\n                    \n                \n\n\n        \n    \n\n    src/SWAPISchemas/films.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FilmsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  characters: z.array(z.string().url()),\n  created: z.coerce.date(),\n  director: z.string(),\n  edited: z.coerce.date(),\n  episode_id: z.string(),\n  opening_crawl: z.string(),\n  planets: z.array(z.string().url()),\n  producer: z.string(),\n  release_date: z.string(),\n  species: z.array(z.string().url()),\n  starships: z.array(z.string().url()),\n  title: z.string(),\n  url: z.string().url(),\n  vehicles: z.array(z.string().url())\n})\n                    \n                \n\n\n        \n    \n\n    src/SWAPISchemas/people.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PeopleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  birth_year: z.string(),\n  created: z.coerce.date(),\n  edited: z.coerce.date(),\n  eye_color: z.string(),\n  films: z.array(z.string().url()),\n  gender: z.string(),\n  hair_color: z.string(),\n  height: z.string(),\n  homeworld: z.string(),\n  mass: z.string(),\n  name: z.string(),\n  skin_color: z.string(),\n  species: z.array(z.string().url()),\n  starships: z.array(z.string().url()),\n  url: z.string().url(),\n  vehicles: z.array(z.string().url())\n})\n                    \n                \n\n\n        \n    \n\n    src/SWAPISchemas/planets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlanetsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  climate: z.string(),\n  created: z.coerce.date(),\n  diameter: z.string(),\n  edited: z.coerce.date(),\n  films: z.array(z.string().url()),\n  gravity: z.string(),\n  name: z.string(),\n  orbital_period: z.string(),\n  population: z.string(),\n  residents: z.array(z.string().url()),\n  rotation_period: z.string(),\n  surface_water: z.string(),\n  terrain: z.string(),\n  url: z.string().url()\n})\n                    \n                \n\n\n        \n    \n\n    src/SWAPISchemas/species.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SpeciesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  average_height: z.string(),\n  average_lifespan: z.string(),\n  classification: z.string(),\n  created: z.coerce.date(),\n  designation: z.string(),\n  edited: z.coerce.date(),\n  eye_colors: z.string(),\n  films: z.array(z.string().url()),\n  hair_colors: z.string(),\n  homeworld: z.string(),\n  language: z.string(),\n  name: z.string(),\n  people: z.array(z.string().url()),\n  skin_colors: z.string(),\n  url: z.string().url()\n})\n                    \n                \n\n\n        \n    \n\n    src/SWAPISchemas/starships.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StarshipsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cargo_capacity: z.string(),\n  consumables: z.string(),\n  cost_in_credits: z.string(),\n  created: z.coerce.date(),\n  crew: z.string(),\n  edited: z.coerce.date(),\n  films: z.array(z.string().url()),\n  hyperdrive_rating: z.string(),\n  length: z.string(),\n  manufacturer: z.string(),\n  max_atmosphering_speed: z.string(),\n  MGLT: z.string(),\n  model: z.string(),\n  name: z.string(),\n  passengers: z.string(),\n  pilots: z.array(z.string().url()),\n  starship_class: z.string(),\n  url: z.string().url()\n})\n                    \n                \n\n\n        \n    \n\n    src/SWAPISchemas/vehicles.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VehiclesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cargo_capacity: z.string(),\n  consumables: z.string(),\n  cost_in_credits: z.string(),\n  created: z.coerce.date(),\n  crew: z.string(),\n  edited: z.coerce.date(),\n  films: z.array(z.string().url()),\n  length: z.string(),\n  manufacturer: z.string(),\n  max_atmosphering_speed: z.string(),\n  model: z.string(),\n  name: z.string(),\n  passengers: z.string(),\n  pilots: z.array(z.string().url()),\n  url: z.string().url(),\n  vehicle_class: z.string()\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
